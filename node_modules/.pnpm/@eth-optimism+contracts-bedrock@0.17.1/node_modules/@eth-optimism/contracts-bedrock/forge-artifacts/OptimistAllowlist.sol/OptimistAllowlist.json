{"abi":[{"type":"constructor","inputs":[{"name":"_attestationStation","type":"address","internalType":"contract AttestationStation"},{"name":"_allowlistAttestor","type":"address","internalType":"address"},{"name":"_coinbaseQuestAttestor","type":"address","internalType":"address"},{"name":"_optimistInviter","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"ALLOWLIST_ATTESTOR","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"ATTESTATION_STATION","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract AttestationStation"}],"stateMutability":"view"},{"type":"function","name":"COINBASE_QUEST_ATTESTOR","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"OPTIMIST_CAN_MINT_ATTESTATION_KEY","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"OPTIMIST_INVITER","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isAllowedToMint","inputs":[{"name":"_claimer","type":"address","internalType":"address"}],"outputs":[{"name":"allowed_","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"}],"bytecode":{"object":"0x61010060405234801561001157600080fd5b506040516106ff3803806106ff8339810160408190526100309161006a565b6001600160a01b0393841660805291831660a052821660c0521660e0526100c9565b6001600160a01b038116811461006757600080fd5b50565b6000806000806080858703121561008057600080fd5b845161008b81610052565b602086015190945061009c81610052565b60408601519093506100ad81610052565b60608601519092506100be81610052565b939692955090935050565b60805160a05160c05160e0516105e261011d6000396000818161014f01526102eb0152600081816092015261029e0152600081816101d201526102510152600081816101ab015261038601526105e26000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063819f7e841161005b578063819f7e8414610171578063db083d71146101a6578063db3c3163146101cd578063e7bd804e146101f457600080fd5b80633ac52df71461008d5780634813d8a6146100de57806354fd4d50146101015780635e4f489a1461014a575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100f16100ec36600461041d565b61021b565b60405190151581526020016100d5565b61013d6040518060400160405280600581526020017f312e312e3000000000000000000000000000000000000000000000000000000081525081565b6040516100d5919061048a565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6101987f636f696e626173652e71756573742d656c696769626c6500000000000000000081565b6040519081526020016100d5565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6101987f6f7074696d6973742e63616e2d6d696e7400000000000000000000000000000081565b60006102268261024a565b80610235575061023582610297565b806102445750610244826102e4565b92915050565b60006102447f0000000000000000000000000000000000000000000000000000000000000000837f6f7074696d6973742e63616e2d6d696e7400000000000000000000000000000061032d565b60006102447f0000000000000000000000000000000000000000000000000000000000000000837f636f696e626173652e71756573742d656c696769626c6500000000000000000061032d565b60006102447f0000000000000000000000000000000000000000000000000000000000000000837f6f7074696d6973742e63616e2d6d696e742d66726f6d2d696e766974650000005b6040517f29b42cb500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015283811660248301526044820183905260009182917f000000000000000000000000000000000000000000000000000000000000000016906329b42cb590606401600060405180830381865afa1580156103cd573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610413919081019061050a565b5111949350505050565b60006020828403121561042f57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461045357600080fd5b9392505050565b60005b8381101561047557818101518382015260200161045d565b83811115610484576000848401525b50505050565b60208152600082518060208401526104a981604085016020870161045a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561051c57600080fd5b815167ffffffffffffffff8082111561053457600080fd5b818401915084601f83011261054857600080fd5b81518181111561055a5761055a6104db565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156105a0576105a06104db565b816040528281528760208487010111156105b957600080fd5b6105ca83602083016020880161045a565b97965050505050505056fea164736f6c634300080f000a","sourceMap":"536:5071:204:-:0;;;1970:386;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2156:41:204;;;;;2207:39;;;;;2256:48;;;;2314:35;;;536:5071;;14:151:334;-1:-1:-1;;;;;109:31:334;;99:42;;89:70;;155:1;152;145:12;89:70;14:151;:::o;170:762::-;295:6;303;311;319;372:3;360:9;351:7;347:23;343:33;340:53;;;389:1;386;379:12;340:53;421:9;415:16;440:51;485:5;440:51;:::i;:::-;560:2;545:18;;539:25;510:5;;-1:-1:-1;573:53:334;539:25;573:53;:::i;:::-;697:2;682:18;;676:25;645:7;;-1:-1:-1;710:53:334;676:25;710:53;:::i;:::-;834:2;819:18;;813:25;782:7;;-1:-1:-1;847:53:334;813:25;847:53;:::i;:::-;170:762;;;;-1:-1:-1;170:762:334;;-1:-1:-1;;170:762:334:o;:::-;536:5071:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063819f7e841161005b578063819f7e8414610171578063db083d71146101a6578063db3c3163146101cd578063e7bd804e146101f457600080fd5b80633ac52df71461008d5780634813d8a6146100de57806354fd4d50146101015780635e4f489a1461014a575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100f16100ec36600461041d565b61021b565b60405190151581526020016100d5565b61013d6040518060400160405280600581526020017f312e312e3000000000000000000000000000000000000000000000000000000081525081565b6040516100d5919061048a565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6101987f636f696e626173652e71756573742d656c696769626c6500000000000000000081565b6040519081526020016100d5565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6101987f6f7074696d6973742e63616e2d6d696e7400000000000000000000000000000081565b60006102268261024a565b80610235575061023582610297565b806102445750610244826102e4565b92915050565b60006102447f0000000000000000000000000000000000000000000000000000000000000000837f6f7074696d6973742e63616e2d6d696e7400000000000000000000000000000061032d565b60006102447f0000000000000000000000000000000000000000000000000000000000000000837f636f696e626173652e71756573742d656c696769626c6500000000000000000061032d565b60006102447f0000000000000000000000000000000000000000000000000000000000000000837f6f7074696d6973742e63616e2d6d696e742d66726f6d2d696e766974650000005b6040517f29b42cb500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015283811660248301526044820183905260009182917f000000000000000000000000000000000000000000000000000000000000000016906329b42cb590606401600060405180830381865afa1580156103cd573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610413919081019061050a565b5111949350505050565b60006020828403121561042f57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461045357600080fd5b9392505050565b60005b8381101561047557818101518382015260200161045d565b83811115610484576000848401525b50505050565b60208152600082518060208401526104a981604085016020870161045a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561051c57600080fd5b815167ffffffffffffffff8082111561053457600080fd5b818401915084601f83011261054857600080fd5b81518181111561055a5761055a6104db565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156105a0576105a06104db565b816040528281528760208487010111156105b957600080fd5b6105ca83602083016020880161045a565b97965050505050505056fea164736f6c634300080f000a","sourceMap":"536:5071:204:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1319:48;;;;;;;;190:42:334;178:55;;;160:74;;148:2;133:18;1319:48:204;;;;;;;;3159:267;;;;;;:::i;:::-;;:::i;:::-;;;724:14:334;;717:22;699:41;;687:2;672:18;3159:267:204;559:187:334;1611:40:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1500:41::-;;;;;892:100;;958:34;892:100;;;;;1607:25:334;;;1595:2;1580:18;892:100:204;1461:177:334;1059:55:204;;;;;1192:43;;;;;702:88;;762:28;702:88;;3159:267;3223:13;3259:46;3296:8;3259:36;:46::i;:::-;:100;;;;3309:50;3350:8;3309:40;:50::i;:::-;3259:160;;;;3375:44;3410:8;3375:34;:44::i;:::-;3248:171;3159:267;-1:-1:-1;;3159:267:204:o;3680:268::-;3767:11;3856:85;3877:18;3897:8;762:28;3856:20;:85::i;4165:283::-;4256:11;4345:96;4366:23;4391:8;958:34;4345:20;:96::i;4672:322::-;4757:11;4852:135;4886:16;4904:8;388:40:206;5398:207:204;5531:56;;;;;:32;2183:15:334;;;5531:56:204;;;2165:34:334;2235:15;;;2215:18;;;2208:43;2267:18;;;2260:34;;;5499:11:204;;;;5531:19;:32;;;;2077:18:334;;5531:56:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;:67;;5398:207;-1:-1:-1;;;;5398:207:204:o;245:309:334:-;304:6;357:2;345:9;336:7;332:23;328:32;325:52;;;373:1;370;363:12;325:52;412:9;399:23;462:42;455:5;451:54;444:5;441:65;431:93;;520:1;517;510:12;431:93;543:5;245:309;-1:-1:-1;;;245:309:334:o;751:258::-;823:1;833:113;847:6;844:1;841:13;833:113;;;923:11;;;917:18;904:11;;;897:39;869:2;862:10;833:113;;;964:6;961:1;958:13;955:48;;;999:1;990:6;985:3;981:16;974:27;955:48;;751:258;;;:::o;1014:442::-;1163:2;1152:9;1145:21;1126:4;1195:6;1189:13;1238:6;1233:2;1222:9;1218:18;1211:34;1254:66;1313:6;1308:2;1297:9;1293:18;1288:2;1280:6;1276:15;1254:66;:::i;:::-;1372:2;1360:15;1377:66;1356:88;1341:104;;;;1447:2;1337:113;;1014:442;-1:-1:-1;;1014:442:334:o;2305:184::-;2357:77;2354:1;2347:88;2454:4;2451:1;2444:15;2478:4;2475:1;2468:15;2494:942;2573:6;2626:2;2614:9;2605:7;2601:23;2597:32;2594:52;;;2642:1;2639;2632:12;2594:52;2675:9;2669:16;2704:18;2745:2;2737:6;2734:14;2731:34;;;2761:1;2758;2751:12;2731:34;2799:6;2788:9;2784:22;2774:32;;2844:7;2837:4;2833:2;2829:13;2825:27;2815:55;;2866:1;2863;2856:12;2815:55;2895:2;2889:9;2917:2;2913;2910:10;2907:36;;;2923:18;;:::i;:::-;3057:2;3051:9;3119:4;3111:13;;2962:66;3107:22;;;3131:2;3103:31;3099:40;3087:53;;;3155:18;;;3175:22;;;3152:46;3149:72;;;3201:18;;:::i;:::-;3241:10;3237:2;3230:22;3276:2;3268:6;3261:18;3316:7;3311:2;3306;3302;3298:11;3294:20;3291:33;3288:53;;;3337:1;3334;3327:12;3288:53;3350:55;3402:2;3397;3389:6;3385:15;3380:2;3376;3372:11;3350:55;:::i;:::-;3424:6;2494:942;-1:-1:-1;;;;;;;2494:942:334:o","linkReferences":{},"immutableReferences":{"97547":[{"start":427,"length":32},{"start":902,"length":32}],"97550":[{"start":466,"length":32},{"start":593,"length":32}],"97553":[{"start":146,"length":32},{"start":670,"length":32}],"97556":[{"start":335,"length":32},{"start":747,"length":32}]}},"methodIdentifiers":{"ALLOWLIST_ATTESTOR()":"db3c3163","ATTESTATION_STATION()":"db083d71","COINBASE_QUEST_ATTESTOR()":"3ac52df7","COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY()":"819f7e84","OPTIMIST_CAN_MINT_ATTESTATION_KEY()":"e7bd804e","OPTIMIST_INVITER()":"5e4f489a","isAllowedToMint(address)":"4813d8a6","version()":"54fd4d50"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract AttestationStation\",\"name\":\"_attestationStation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_allowlistAttestor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_coinbaseQuestAttestor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_optimistInviter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ALLOWLIST_ATTESTOR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ATTESTATION_STATION\",\"outputs\":[{\"internalType\":\"contract AttestationStation\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COINBASE_QUEST_ATTESTOR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPTIMIST_CAN_MINT_ATTESTATION_KEY\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPTIMIST_INVITER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"isAllowedToMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_allowlistAttestor\":\"Address of the allowlist attestor.\",\"_attestationStation\":\"Address of the AttestationStation contract.\",\"_coinbaseQuestAttestor\":\"Address of the Coinbase Quest attestor.\",\"_optimistInviter\":\"Address of the OptimistInviter contract.\"}},\"isAllowedToMint(address)\":{\"params\":{\"_claimer\":\"Address to check.\"},\"returns\":{\"allowed_\":\"Whether or not the address is allowed to mint yet.\"}}},\"stateVariables\":{\"version\":{\"custom:semver\":\"1.1.0\"}},\"title\":\"OptimistAllowlist\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ALLOWLIST_ATTESTOR()\":{\"notice\":\"Attestor that issues 'optimist.can-mint' attestations.\"},\"ATTESTATION_STATION()\":{\"notice\":\"Address of the AttestationStation contract.\"},\"COINBASE_QUEST_ATTESTOR()\":{\"notice\":\"Attestor that issues 'coinbase.quest-eligible' attestations.\"},\"COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY()\":{\"notice\":\"Attestation key used by Coinbase to issue attestations for Quest participants.\"},\"OPTIMIST_CAN_MINT_ATTESTATION_KEY()\":{\"notice\":\"Attestation key used by the AllowlistAttestor to manually add addresses to the         allowlist.\"},\"OPTIMIST_INVITER()\":{\"notice\":\"Address of OptimistInviter contract that issues 'optimist.can-mint-from-invite'         attestations.\"},\"isAllowedToMint(address)\":{\"notice\":\"Checks whether a given address is allowed to mint the Optimist NFT yet. Since the         Optimist NFT will also be used as part of the Citizens House, mints are currently         restricted. Eventually anyone will be able to mint.         Currently, address is allowed to mint if it satisfies any of the following:          1) Has a valid 'optimist.can-mint' attestation from the allowlist attestor.          2) Has a valid 'coinbase.quest-eligible' attestation from Coinbase Quest attestor          3) Has a valid 'optimist.can-mint-from-invite' attestation from the OptimistInviter             contract.\"},\"version()\":{\"notice\":\"Semantic version.\"}},\"notice\":\"Source of truth for whether an address is able to mint an Optimist NFT.         isAllowedToMint function checks various signals to return boolean value         for whether an address is eligible or not.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/periphery/op-nft/OptimistAllowlist.sol\":\"OptimistAllowlist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/lib-keccak/lib/solady/src/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/periphery/op-nft/AttestationStation.sol\":{\"keccak256\":\"0x756accab2fc86dbe076dc340af05c06c732815392a8cbab6524dc971d4957208\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4bf7f1a162318d31c39a4d34d46ada80cdacd51c24a110f411ec245c1b6a4ef\",\"dweb:/ipfs/QmScehXXWTKDnUr9ohMb1o8zButujNP9SDAWRSnDy6jpdK\"]},\"src/periphery/op-nft/OptimistAllowlist.sol\":{\"keccak256\":\"0xd05ecf4ac35004c36e862734eb19a70cdc52bf187c52a5bd4b882b7c0bf52d77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca3c5ed23a7ae0e6e2864974a903e5aa5e34959cf8ad05ce946b9dce24482a80\",\"dweb:/ipfs/QmdgnFg8mh1s81qn7kBUkJNtnEpEzh6Q53WL4HjQDDbrfU\"]},\"src/periphery/op-nft/libraries/OptimistConstants.sol\":{\"keccak256\":\"0x901c8a2a333a668ef2a6336a803dd06fea51d4128a38087af4565bff1ae6db8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87e68615dea2494b1cd8f96d7ad97ccb9556d00539526b53a7ce5314570fc268\",\"dweb:/ipfs/QmZBNNrSVMKz4GDkRJyp5jjV6V4wGN7ySAhDd1pBvbJkS2\"]},\"src/universal/ISemver.sol\":{\"keccak256\":\"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a\",\"dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.15+commit.e14f2714"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract AttestationStation","name":"_attestationStation","type":"address"},{"internalType":"address","name":"_allowlistAttestor","type":"address"},{"internalType":"address","name":"_coinbaseQuestAttestor","type":"address"},{"internalType":"address","name":"_optimistInviter","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"stateMutability":"view","type":"function","name":"ALLOWLIST_ATTESTOR","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"ATTESTATION_STATION","outputs":[{"internalType":"contract AttestationStation","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"COINBASE_QUEST_ATTESTOR","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"OPTIMIST_CAN_MINT_ATTESTATION_KEY","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"OPTIMIST_INVITER","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_claimer","type":"address"}],"stateMutability":"view","type":"function","name":"isAllowedToMint","outputs":[{"internalType":"bool","name":"allowed_","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"version","outputs":[{"internalType":"string","name":"","type":"string"}]}],"devdoc":{"kind":"dev","methods":{"constructor":{"params":{"_allowlistAttestor":"Address of the allowlist attestor.","_attestationStation":"Address of the AttestationStation contract.","_coinbaseQuestAttestor":"Address of the Coinbase Quest attestor.","_optimistInviter":"Address of the OptimistInviter contract."}},"isAllowedToMint(address)":{"params":{"_claimer":"Address to check."},"returns":{"allowed_":"Whether or not the address is allowed to mint yet."}}},"version":1},"userdoc":{"kind":"user","methods":{"ALLOWLIST_ATTESTOR()":{"notice":"Attestor that issues 'optimist.can-mint' attestations."},"ATTESTATION_STATION()":{"notice":"Address of the AttestationStation contract."},"COINBASE_QUEST_ATTESTOR()":{"notice":"Attestor that issues 'coinbase.quest-eligible' attestations."},"COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY()":{"notice":"Attestation key used by Coinbase to issue attestations for Quest participants."},"OPTIMIST_CAN_MINT_ATTESTATION_KEY()":{"notice":"Attestation key used by the AllowlistAttestor to manually add addresses to the         allowlist."},"OPTIMIST_INVITER()":{"notice":"Address of OptimistInviter contract that issues 'optimist.can-mint-from-invite'         attestations."},"isAllowedToMint(address)":{"notice":"Checks whether a given address is allowed to mint the Optimist NFT yet. Since the         Optimist NFT will also be used as part of the Citizens House, mints are currently         restricted. Eventually anyone will be able to mint.         Currently, address is allowed to mint if it satisfies any of the following:          1) Has a valid 'optimist.can-mint' attestation from the allowlist attestor.          2) Has a valid 'coinbase.quest-eligible' attestation from Coinbase Quest attestor          3) Has a valid 'optimist.can-mint-from-invite' attestation from the OptimistInviter             contract."},"version()":{"notice":"Semantic version."}},"version":1}},"settings":{"remappings":["@cwia/=lib/clones-with-immutable-args/src/","@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/lib-keccak/lib/solady/src/","clones-with-immutable-args/=lib/clones-with-immutable-args/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/periphery/op-nft/OptimistAllowlist.sol":"OptimistAllowlist"},"evmVersion":"london","libraries":{}},"sources":{"src/periphery/op-nft/AttestationStation.sol":{"keccak256":"0x756accab2fc86dbe076dc340af05c06c732815392a8cbab6524dc971d4957208","urls":["bzz-raw://a4bf7f1a162318d31c39a4d34d46ada80cdacd51c24a110f411ec245c1b6a4ef","dweb:/ipfs/QmScehXXWTKDnUr9ohMb1o8zButujNP9SDAWRSnDy6jpdK"],"license":"MIT"},"src/periphery/op-nft/OptimistAllowlist.sol":{"keccak256":"0xd05ecf4ac35004c36e862734eb19a70cdc52bf187c52a5bd4b882b7c0bf52d77","urls":["bzz-raw://ca3c5ed23a7ae0e6e2864974a903e5aa5e34959cf8ad05ce946b9dce24482a80","dweb:/ipfs/QmdgnFg8mh1s81qn7kBUkJNtnEpEzh6Q53WL4HjQDDbrfU"],"license":"MIT"},"src/periphery/op-nft/libraries/OptimistConstants.sol":{"keccak256":"0x901c8a2a333a668ef2a6336a803dd06fea51d4128a38087af4565bff1ae6db8c","urls":["bzz-raw://87e68615dea2494b1cd8f96d7ad97ccb9556d00539526b53a7ce5314570fc268","dweb:/ipfs/QmZBNNrSVMKz4GDkRJyp5jjV6V4wGN7ySAhDd1pBvbJkS2"],"license":"MIT"},"src/universal/ISemver.sol":{"keccak256":"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44","urls":["bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a","dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"userdoc":{"version":1,"kind":"user","methods":{"ALLOWLIST_ATTESTOR()":{"notice":"Attestor that issues 'optimist.can-mint' attestations."},"ATTESTATION_STATION()":{"notice":"Address of the AttestationStation contract."},"COINBASE_QUEST_ATTESTOR()":{"notice":"Attestor that issues 'coinbase.quest-eligible' attestations."},"COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY()":{"notice":"Attestation key used by Coinbase to issue attestations for Quest participants."},"OPTIMIST_CAN_MINT_ATTESTATION_KEY()":{"notice":"Attestation key used by the AllowlistAttestor to manually add addresses to the         allowlist."},"OPTIMIST_INVITER()":{"notice":"Address of OptimistInviter contract that issues 'optimist.can-mint-from-invite'         attestations."},"isAllowedToMint(address)":{"notice":"Checks whether a given address is allowed to mint the Optimist NFT yet. Since the         Optimist NFT will also be used as part of the Citizens House, mints are currently         restricted. Eventually anyone will be able to mint.         Currently, address is allowed to mint if it satisfies any of the following:          1) Has a valid 'optimist.can-mint' attestation from the allowlist attestor.          2) Has a valid 'coinbase.quest-eligible' attestation from Coinbase Quest attestor          3) Has a valid 'optimist.can-mint-from-invite' attestation from the OptimistInviter             contract."},"version()":{"notice":"Semantic version."}},"notice":"Source of truth for whether an address is able to mint an Optimist NFT.         isAllowedToMint function checks various signals to return boolean value         for whether an address is eligible or not."},"devdoc":{"version":1,"kind":"dev","methods":{"constructor":{"params":{"_allowlistAttestor":"Address of the allowlist attestor.","_attestationStation":"Address of the AttestationStation contract.","_coinbaseQuestAttestor":"Address of the Coinbase Quest attestor.","_optimistInviter":"Address of the OptimistInviter contract."}},"isAllowedToMint(address)":{"params":{"_claimer":"Address to check."},"returns":{"allowed_":"Whether or not the address is allowed to mint yet."}}},"title":"OptimistAllowlist"},"ast":{"absolutePath":"src/periphery/op-nft/OptimistAllowlist.sol","id":97692,"exportedSymbols":{"AttestationStation":[97258],"ISemver":[99149],"OptimistAllowlist":[97691],"OptimistConstants":[98040]},"nodeType":"SourceUnit","src":"32:5576:204","nodes":[{"id":97520,"nodeType":"PragmaDirective","src":"32:23:204","nodes":[],"literals":["solidity","0.8",".15"]},{"id":97522,"nodeType":"ImportDirective","src":"57:52:204","nodes":[],"absolutePath":"src/universal/ISemver.sol","file":"src/universal/ISemver.sol","nameLocation":"-1:-1:-1","scope":97692,"sourceUnit":99150,"symbolAliases":[{"foreign":{"id":97521,"name":"ISemver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99149,"src":"66:7:204","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":97524,"nodeType":"ImportDirective","src":"110:81:204","nodes":[],"absolutePath":"src/periphery/op-nft/AttestationStation.sol","file":"src/periphery/op-nft/AttestationStation.sol","nameLocation":"-1:-1:-1","scope":97692,"sourceUnit":97259,"symbolAliases":[{"foreign":{"id":97523,"name":"AttestationStation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97258,"src":"119:18:204","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":97526,"nodeType":"ImportDirective","src":"192:89:204","nodes":[],"absolutePath":"src/periphery/op-nft/libraries/OptimistConstants.sol","file":"src/periphery/op-nft/libraries/OptimistConstants.sol","nameLocation":"-1:-1:-1","scope":97692,"sourceUnit":98041,"symbolAliases":[{"foreign":{"id":97525,"name":"OptimistConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98040,"src":"201:17:204","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":97691,"nodeType":"ContractDefinition","src":"536:5071:204","nodes":[{"id":97536,"nodeType":"VariableDeclaration","src":"702:88:204","nodes":[],"constant":true,"documentation":{"id":97530,"nodeType":"StructuredDocumentation","src":"580:117:204","text":"@notice Attestation key used by the AllowlistAttestor to manually add addresses to the\n         allowlist."},"functionSelector":"e7bd804e","mutability":"constant","name":"OPTIMIST_CAN_MINT_ATTESTATION_KEY","nameLocation":"726:33:204","scope":97691,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":97531,"name":"bytes32","nodeType":"ElementaryTypeName","src":"702:7:204","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"6f7074696d6973742e63616e2d6d696e74","id":97534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"770:19:204","typeDescriptions":{"typeIdentifier":"t_stringliteral_052936ee16d89f9e65a9b7bbd8d9b2bc86423aed8540d6da93edb9c52fb226e4","typeString":"literal_string \"optimist.can-mint\""},"value":"optimist.can-mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_052936ee16d89f9e65a9b7bbd8d9b2bc86423aed8540d6da93edb9c52fb226e4","typeString":"literal_string \"optimist.can-mint\""}],"id":97533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"762:7:204","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":97532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"762:7:204","typeDescriptions":{}}},"id":97535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"762:28:204","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"id":97543,"nodeType":"VariableDeclaration","src":"892:100:204","nodes":[],"constant":true,"documentation":{"id":97537,"nodeType":"StructuredDocumentation","src":"797:90:204","text":"@notice Attestation key used by Coinbase to issue attestations for Quest participants."},"functionSelector":"819f7e84","mutability":"constant","name":"COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY","nameLocation":"916:39:204","scope":97691,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":97538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"892:7:204","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"636f696e626173652e71756573742d656c696769626c65","id":97541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"966:25:204","typeDescriptions":{"typeIdentifier":"t_stringliteral_061d62794d2ee045bbdaae9451ac28b2b9e4531061a0cbeb1046dbda1ca3528a","typeString":"literal_string \"coinbase.quest-eligible\""},"value":"coinbase.quest-eligible"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_061d62794d2ee045bbdaae9451ac28b2b9e4531061a0cbeb1046dbda1ca3528a","typeString":"literal_string \"coinbase.quest-eligible\""}],"id":97540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"958:7:204","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":97539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"958:7:204","typeDescriptions":{}}},"id":97542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"958:34:204","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"id":97547,"nodeType":"VariableDeclaration","src":"1059:55:204","nodes":[],"constant":false,"documentation":{"id":97544,"nodeType":"StructuredDocumentation","src":"999:55:204","text":"@notice Address of the AttestationStation contract."},"functionSelector":"db083d71","mutability":"immutable","name":"ATTESTATION_STATION","nameLocation":"1095:19:204","scope":97691,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AttestationStation_$97258","typeString":"contract AttestationStation"},"typeName":{"id":97546,"nodeType":"UserDefinedTypeName","pathNode":{"id":97545,"name":"AttestationStation","nodeType":"IdentifierPath","referencedDeclaration":97258,"src":"1059:18:204"},"referencedDeclaration":97258,"src":"1059:18:204","typeDescriptions":{"typeIdentifier":"t_contract$_AttestationStation_$97258","typeString":"contract AttestationStation"}},"visibility":"public"},{"id":97550,"nodeType":"VariableDeclaration","src":"1192:43:204","nodes":[],"constant":false,"documentation":{"id":97548,"nodeType":"StructuredDocumentation","src":"1121:66:204","text":"@notice Attestor that issues 'optimist.can-mint' attestations."},"functionSelector":"db3c3163","mutability":"immutable","name":"ALLOWLIST_ATTESTOR","nameLocation":"1217:18:204","scope":97691,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97549,"name":"address","nodeType":"ElementaryTypeName","src":"1192:7:204","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"id":97553,"nodeType":"VariableDeclaration","src":"1319:48:204","nodes":[],"constant":false,"documentation":{"id":97551,"nodeType":"StructuredDocumentation","src":"1242:72:204","text":"@notice Attestor that issues 'coinbase.quest-eligible' attestations."},"functionSelector":"3ac52df7","mutability":"immutable","name":"COINBASE_QUEST_ATTESTOR","nameLocation":"1344:23:204","scope":97691,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97552,"name":"address","nodeType":"ElementaryTypeName","src":"1319:7:204","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"id":97556,"nodeType":"VariableDeclaration","src":"1500:41:204","nodes":[],"constant":false,"documentation":{"id":97554,"nodeType":"StructuredDocumentation","src":"1374:121:204","text":"@notice Address of OptimistInviter contract that issues 'optimist.can-mint-from-invite'\n         attestations."},"functionSelector":"5e4f489a","mutability":"immutable","name":"OPTIMIST_INVITER","nameLocation":"1525:16:204","scope":97691,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97555,"name":"address","nodeType":"ElementaryTypeName","src":"1500:7:204","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"id":97560,"nodeType":"VariableDeclaration","src":"1611:40:204","nodes":[],"baseFunctions":[99148],"constant":true,"documentation":{"id":97557,"nodeType":"StructuredDocumentation","src":"1548:58:204","text":"@notice Semantic version.\n @custom:semver 1.1.0"},"functionSelector":"54fd4d50","mutability":"constant","name":"version","nameLocation":"1634:7:204","scope":97691,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":97558,"name":"string","nodeType":"ElementaryTypeName","src":"1611:6:204","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"312e312e30","id":97559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1644:7:204","typeDescriptions":{"typeIdentifier":"t_stringliteral_6815ba53416ba06aff1932cc76b3832272bafab9bc8e066be382e32b06ba5546","typeString":"literal_string \"1.1.0\""},"value":"1.1.0"},"visibility":"public"},{"id":97590,"nodeType":"FunctionDefinition","src":"1970:386:204","nodes":[],"body":{"id":97589,"nodeType":"Block","src":"2146:210:204","nodes":[],"statements":[{"expression":{"id":97575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":97573,"name":"ATTESTATION_STATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97547,"src":"2156:19:204","typeDescriptions":{"typeIdentifier":"t_contract$_AttestationStation_$97258","typeString":"contract AttestationStation"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":97574,"name":"_attestationStation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97564,"src":"2178:19:204","typeDescriptions":{"typeIdentifier":"t_contract$_AttestationStation_$97258","typeString":"contract AttestationStation"}},"src":"2156:41:204","typeDescriptions":{"typeIdentifier":"t_contract$_AttestationStation_$97258","typeString":"contract AttestationStation"}},"id":97576,"nodeType":"ExpressionStatement","src":"2156:41:204"},{"expression":{"id":97579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":97577,"name":"ALLOWLIST_ATTESTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97550,"src":"2207:18:204","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":97578,"name":"_allowlistAttestor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97566,"src":"2228:18:204","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2207:39:204","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":97580,"nodeType":"ExpressionStatement","src":"2207:39:204"},{"expression":{"id":97583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":97581,"name":"COINBASE_QUEST_ATTESTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97553,"src":"2256:23:204","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":97582,"name":"_coinbaseQuestAttestor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97568,"src":"2282:22:204","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2256:48:204","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":97584,"nodeType":"ExpressionStatement","src":"2256:48:204"},{"expression":{"id":97587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":97585,"name":"OPTIMIST_INVITER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97556,"src":"2314:16:204","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":97586,"name":"_optimistInviter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97570,"src":"2333:16:204","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2314:35:204","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":97588,"nodeType":"ExpressionStatement","src":"2314:35:204"}]},"documentation":{"id":97561,"nodeType":"StructuredDocumentation","src":"1658:307:204","text":"@param _attestationStation    Address of the AttestationStation contract.\n @param _allowlistAttestor     Address of the allowlist attestor.\n @param _coinbaseQuestAttestor Address of the Coinbase Quest attestor.\n @param _optimistInviter       Address of the OptimistInviter contract."},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":97571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97564,"mutability":"mutable","name":"_attestationStation","nameLocation":"2010:19:204","nodeType":"VariableDeclaration","scope":97590,"src":"1991:38:204","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AttestationStation_$97258","typeString":"contract AttestationStation"},"typeName":{"id":97563,"nodeType":"UserDefinedTypeName","pathNode":{"id":97562,"name":"AttestationStation","nodeType":"IdentifierPath","referencedDeclaration":97258,"src":"1991:18:204"},"referencedDeclaration":97258,"src":"1991:18:204","typeDescriptions":{"typeIdentifier":"t_contract$_AttestationStation_$97258","typeString":"contract AttestationStation"}},"visibility":"internal"},{"constant":false,"id":97566,"mutability":"mutable","name":"_allowlistAttestor","nameLocation":"2047:18:204","nodeType":"VariableDeclaration","scope":97590,"src":"2039:26:204","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97565,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:204","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":97568,"mutability":"mutable","name":"_coinbaseQuestAttestor","nameLocation":"2083:22:204","nodeType":"VariableDeclaration","scope":97590,"src":"2075:30:204","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97567,"name":"address","nodeType":"ElementaryTypeName","src":"2075:7:204","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":97570,"mutability":"mutable","name":"_optimistInviter","nameLocation":"2123:16:204","nodeType":"VariableDeclaration","scope":97590,"src":"2115:24:204","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97569,"name":"address","nodeType":"ElementaryTypeName","src":"2115:7:204","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1981:164:204"},"returnParameters":{"id":97572,"nodeType":"ParameterList","parameters":[],"src":"2146:0:204"},"scope":97691,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":97613,"nodeType":"FunctionDefinition","src":"3159:267:204","nodes":[],"body":{"id":97612,"nodeType":"Block","src":"3238:188:204","nodes":[],"statements":[{"expression":{"id":97610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":97598,"name":"allowed_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97596,"src":"3248:8:204","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":97609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":97605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":97600,"name":"_claimer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97593,"src":"3296:8:204","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":97599,"name":"_hasAttestationFromAllowlistAttestor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97630,"src":"3259:36:204","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":97601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3259:46:204","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":97603,"name":"_claimer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97593,"src":"3350:8:204","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":97602,"name":"_hasAttestationFromCoinbaseQuestAttestor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97647,"src":"3309:40:204","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":97604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3309:50:204","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3259:100:204","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":97607,"name":"_claimer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97593,"src":"3410:8:204","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":97606,"name":"_hasAttestationFromOptimistInviter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97665,"src":"3375:34:204","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":97608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3375:44:204","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3259:160:204","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3248:171:204","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":97611,"nodeType":"ExpressionStatement","src":"3248:171:204"}]},"documentation":{"id":97591,"nodeType":"StructuredDocumentation","src":"2362:792:204","text":"@notice Checks whether a given address is allowed to mint the Optimist NFT yet. Since the\n         Optimist NFT will also be used as part of the Citizens House, mints are currently\n         restricted. Eventually anyone will be able to mint.\n         Currently, address is allowed to mint if it satisfies any of the following:\n          1) Has a valid 'optimist.can-mint' attestation from the allowlist attestor.\n          2) Has a valid 'coinbase.quest-eligible' attestation from Coinbase Quest attestor\n          3) Has a valid 'optimist.can-mint-from-invite' attestation from the OptimistInviter\n             contract.\n @param _claimer Address to check.\n @return allowed_ Whether or not the address is allowed to mint yet."},"functionSelector":"4813d8a6","implemented":true,"kind":"function","modifiers":[],"name":"isAllowedToMint","nameLocation":"3168:15:204","parameters":{"id":97594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97593,"mutability":"mutable","name":"_claimer","nameLocation":"3192:8:204","nodeType":"VariableDeclaration","scope":97613,"src":"3184:16:204","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97592,"name":"address","nodeType":"ElementaryTypeName","src":"3184:7:204","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3183:18:204"},"returnParameters":{"id":97597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97596,"mutability":"mutable","name":"allowed_","nameLocation":"3228:8:204","nodeType":"VariableDeclaration","scope":97613,"src":"3223:13:204","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":97595,"name":"bool","nodeType":"ElementaryTypeName","src":"3223:4:204","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3222:15:204"},"scope":97691,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":97630,"nodeType":"FunctionDefinition","src":"3680:268:204","nodes":[],"body":{"id":97629,"nodeType":"Block","src":"3780:168:204","nodes":[],"statements":[{"expression":{"id":97627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":97621,"name":"valid_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97619,"src":"3847:6:204","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":97623,"name":"ALLOWLIST_ATTESTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97550,"src":"3877:18:204","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":97624,"name":"_claimer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97616,"src":"3897:8:204","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":97625,"name":"OPTIMIST_CAN_MINT_ATTESTATION_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97536,"src":"3907:33:204","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":97622,"name":"_hasValidAttestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97690,"src":"3856:20:204","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_bytes32_$returns$_t_bool_$","typeString":"function (address,address,bytes32) view returns (bool)"}},"id":97626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3856:85:204","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3847:94:204","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":97628,"nodeType":"ExpressionStatement","src":"3847:94:204"}]},"documentation":{"id":97614,"nodeType":"StructuredDocumentation","src":"3432:243:204","text":"@notice Checks whether an address has a valid 'optimist.can-mint' attestation from the\n         allowlist attestor.\n @param _claimer Address to check.\n @return valid_ Whether or not the address has a valid attestation."},"implemented":true,"kind":"function","modifiers":[],"name":"_hasAttestationFromAllowlistAttestor","nameLocation":"3689:36:204","parameters":{"id":97617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97616,"mutability":"mutable","name":"_claimer","nameLocation":"3734:8:204","nodeType":"VariableDeclaration","scope":97630,"src":"3726:16:204","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97615,"name":"address","nodeType":"ElementaryTypeName","src":"3726:7:204","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3725:18:204"},"returnParameters":{"id":97620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97619,"mutability":"mutable","name":"valid_","nameLocation":"3772:6:204","nodeType":"VariableDeclaration","scope":97630,"src":"3767:11:204","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":97618,"name":"bool","nodeType":"ElementaryTypeName","src":"3767:4:204","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3766:13:204"},"scope":97691,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":97647,"nodeType":"FunctionDefinition","src":"4165:283:204","nodes":[],"body":{"id":97646,"nodeType":"Block","src":"4269:179:204","nodes":[],"statements":[{"expression":{"id":97644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":97638,"name":"valid_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97636,"src":"4336:6:204","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":97640,"name":"COINBASE_QUEST_ATTESTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97553,"src":"4366:23:204","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":97641,"name":"_claimer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97633,"src":"4391:8:204","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":97642,"name":"COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97543,"src":"4401:39:204","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":97639,"name":"_hasValidAttestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97690,"src":"4345:20:204","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_bytes32_$returns$_t_bool_$","typeString":"function (address,address,bytes32) view returns (bool)"}},"id":97643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4345:96:204","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4336:105:204","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":97645,"nodeType":"ExpressionStatement","src":"4336:105:204"}]},"documentation":{"id":97631,"nodeType":"StructuredDocumentation","src":"3954:206:204","text":"@notice Checks whether an address has a valid attestation from the Coinbase attestor.\n @param _claimer Address to check.\n @return valid_ Whether or not the address has a valid attestation."},"implemented":true,"kind":"function","modifiers":[],"name":"_hasAttestationFromCoinbaseQuestAttestor","nameLocation":"4174:40:204","parameters":{"id":97634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97633,"mutability":"mutable","name":"_claimer","nameLocation":"4223:8:204","nodeType":"VariableDeclaration","scope":97647,"src":"4215:16:204","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97632,"name":"address","nodeType":"ElementaryTypeName","src":"4215:7:204","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4214:18:204"},"returnParameters":{"id":97637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97636,"mutability":"mutable","name":"valid_","nameLocation":"4261:6:204","nodeType":"VariableDeclaration","scope":97647,"src":"4256:11:204","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":97635,"name":"bool","nodeType":"ElementaryTypeName","src":"4256:4:204","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4255:13:204"},"scope":97691,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":97665,"nodeType":"FunctionDefinition","src":"4672:322:204","nodes":[],"body":{"id":97664,"nodeType":"Block","src":"4770:224:204","nodes":[],"statements":[{"expression":{"id":97662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":97655,"name":"valid_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97653,"src":"4843:6:204","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":97657,"name":"OPTIMIST_INVITER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97556,"src":"4886:16:204","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":97658,"name":"_claimer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97650,"src":"4904:8:204","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":97659,"name":"OptimistConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98040,"src":"4914:17:204","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OptimistConstants_$98040_$","typeString":"type(library OptimistConstants)"}},"id":97660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"OPTIMIST_CAN_MINT_FROM_INVITE_ATTESTATION_KEY","nodeType":"MemberAccess","referencedDeclaration":98039,"src":"4914:63:204","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":97656,"name":"_hasValidAttestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97690,"src":"4852:20:204","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_bytes32_$returns$_t_bool_$","typeString":"function (address,address,bytes32) view returns (bool)"}},"id":97661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4852:135:204","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4843:144:204","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":97663,"nodeType":"ExpressionStatement","src":"4843:144:204"}]},"documentation":{"id":97648,"nodeType":"StructuredDocumentation","src":"4454:213:204","text":"@notice Checks whether an address has a valid attestation from the OptimistInviter contract.\n @param _claimer Address to check.\n @return valid_ Whether or not the address has a valid attestation."},"implemented":true,"kind":"function","modifiers":[],"name":"_hasAttestationFromOptimistInviter","nameLocation":"4681:34:204","parameters":{"id":97651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97650,"mutability":"mutable","name":"_claimer","nameLocation":"4724:8:204","nodeType":"VariableDeclaration","scope":97665,"src":"4716:16:204","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97649,"name":"address","nodeType":"ElementaryTypeName","src":"4716:7:204","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4715:18:204"},"returnParameters":{"id":97654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97653,"mutability":"mutable","name":"valid_","nameLocation":"4762:6:204","nodeType":"VariableDeclaration","scope":97665,"src":"4757:11:204","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":97652,"name":"bool","nodeType":"ElementaryTypeName","src":"4757:4:204","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4756:13:204"},"scope":97691,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":97690,"nodeType":"FunctionDefinition","src":"5398:207:204","nodes":[],"body":{"id":97689,"nodeType":"Block","src":"5512:93:204","nodes":[],"statements":[{"expression":{"id":97687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":97677,"name":"valid_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97675,"src":"5522:6:204","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":97686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":97680,"name":"_creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97668,"src":"5564:8:204","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":97681,"name":"_about","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97670,"src":"5574:6:204","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":97682,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97672,"src":"5582:4:204","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":97678,"name":"ATTESTATION_STATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97547,"src":"5531:19:204","typeDescriptions":{"typeIdentifier":"t_contract$_AttestationStation_$97258","typeString":"contract AttestationStation"}},"id":97679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"attestations","nodeType":"MemberAccess","referencedDeclaration":97169,"src":"5531:32:204","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,address,bytes32) view external returns (bytes memory)"}},"id":97683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5531:56:204","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":97684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5531:63:204","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":97685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5597:1:204","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5531:67:204","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5522:76:204","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":97688,"nodeType":"ExpressionStatement","src":"5522:76:204"}]},"documentation":{"id":97666,"nodeType":"StructuredDocumentation","src":"5000:393:204","text":"@notice Checks whether an address has a valid truthy attestation.\n         Any attestation val other than bytes32(\"\") is considered truthy.\n @param _creator Address that made the attestation.\n @param _about   Address attestation is about.\n @param _key     Key of the attestation.\n @return valid_ Whether or not the address has a valid truthy attestation."},"implemented":true,"kind":"function","modifiers":[],"name":"_hasValidAttestation","nameLocation":"5407:20:204","parameters":{"id":97673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97668,"mutability":"mutable","name":"_creator","nameLocation":"5436:8:204","nodeType":"VariableDeclaration","scope":97690,"src":"5428:16:204","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97667,"name":"address","nodeType":"ElementaryTypeName","src":"5428:7:204","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":97670,"mutability":"mutable","name":"_about","nameLocation":"5454:6:204","nodeType":"VariableDeclaration","scope":97690,"src":"5446:14:204","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97669,"name":"address","nodeType":"ElementaryTypeName","src":"5446:7:204","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":97672,"mutability":"mutable","name":"_key","nameLocation":"5470:4:204","nodeType":"VariableDeclaration","scope":97690,"src":"5462:12:204","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":97671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5462:7:204","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5427:48:204"},"returnParameters":{"id":97676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97675,"mutability":"mutable","name":"valid_","nameLocation":"5504:6:204","nodeType":"VariableDeclaration","scope":97690,"src":"5499:11:204","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":97674,"name":"bool","nodeType":"ElementaryTypeName","src":"5499:4:204","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5498:13:204"},"scope":97691,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[{"baseName":{"id":97528,"name":"ISemver","nodeType":"IdentifierPath","referencedDeclaration":99149,"src":"566:7:204"},"id":97529,"nodeType":"InheritanceSpecifier","src":"566:7:204"}],"canonicalName":"OptimistAllowlist","contractDependencies":[],"contractKind":"contract","documentation":{"id":97527,"nodeType":"StructuredDocumentation","src":"283:253:204","text":"@title  OptimistAllowlist\n @notice Source of truth for whether an address is able to mint an Optimist NFT.\n         isAllowedToMint function checks various signals to return boolean value\n         for whether an address is eligible or not."},"fullyImplemented":true,"linearizedBaseContracts":[97691,99149],"name":"OptimistAllowlist","nameLocation":"545:17:204","scope":97692,"usedErrors":[]}],"license":"MIT"},"id":204}
{"abi":[],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Richard Meissner - @rmeissner\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Executor - A contract that can execute transactions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/safe-contracts/contracts/base/Executor.sol\":\"Executor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/lib-keccak/lib/solady/src/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/safe-contracts/contracts/base/Executor.sol\":{\"keccak256\":\"0xf0be832e7529e92000544170a5529d73666a9b5e836b30c6f2ed6ef7d7d8c94a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://710022b40c9f78a5b55b97f6ce600e4834df2ddd36bf714974d953883c82d58c\",\"dweb:/ipfs/QmbdJNKH5opevm7HxQKQAe6W7dQTgSHKa4nKvbUNGRcQQp\"]},\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34\",\"dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.15+commit.e14f2714"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@cwia/=lib/clones-with-immutable-args/src/","@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/lib-keccak/lib/solady/src/","clones-with-immutable-args/=lib/clones-with-immutable-args/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"lib/safe-contracts/contracts/base/Executor.sol":"Executor"},"evmVersion":"london","libraries":{}},"sources":{"lib/safe-contracts/contracts/base/Executor.sol":{"keccak256":"0xf0be832e7529e92000544170a5529d73666a9b5e836b30c6f2ed6ef7d7d8c94a","urls":["bzz-raw://710022b40c9f78a5b55b97f6ce600e4834df2ddd36bf714974d953883c82d58c","dweb:/ipfs/QmbdJNKH5opevm7HxQKQAe6W7dQTgSHKa4nKvbUNGRcQQp"],"license":"LGPL-3.0-only"},"lib/safe-contracts/contracts/common/Enum.sol":{"keccak256":"0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453","urls":["bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34","dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo"],"license":"LGPL-3.0-only"}},"version":1},"storageLayout":{"storage":[],"types":{}},"userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","author":"Richard Meissner - @rmeissner","title":"Executor - A contract that can execute transactions"},"ast":{"absolutePath":"lib/safe-contracts/contracts/base/Executor.sol","id":56797,"exportedSymbols":{"Enum":[57930],"Executor":[56796]},"nodeType":"SourceUnit","src":"42:1383:72","nodes":[{"id":56765,"nodeType":"PragmaDirective","src":"42:31:72","nodes":[],"literals":["solidity",">=","0.7",".0","<","0.9",".0"]},{"id":56766,"nodeType":"ImportDirective","src":"74:28:72","nodes":[],"absolutePath":"lib/safe-contracts/contracts/common/Enum.sol","file":"../common/Enum.sol","nameLocation":"-1:-1:-1","scope":56797,"sourceUnit":57931,"symbolAliases":[],"unitAlias":""},{"id":56796,"nodeType":"ContractDefinition","src":"215:1209:72","nodes":[{"id":56795,"nodeType":"FunctionDefinition","src":"783:639:72","nodes":[],"body":{"id":56794,"nodeType":"Block","src":"965:457:72","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_Operation_$57929","typeString":"enum Enum.Operation"},"id":56788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":56784,"name":"operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56777,"src":"979:9:72","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$57929","typeString":"enum Enum.Operation"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":56785,"name":"Enum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57930,"src":"992:4:72","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Enum_$57930_$","typeString":"type(contract Enum)"}},"id":56786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Operation","nodeType":"MemberAccess","referencedDeclaration":57929,"src":"992:14:72","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Operation_$57929_$","typeString":"type(enum Enum.Operation)"}},"id":56787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"DelegateCall","nodeType":"MemberAccess","referencedDeclaration":57928,"src":"992:27:72","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$57929","typeString":"enum Enum.Operation"}},"src":"979:40:72","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":56792,"nodeType":"Block","src":"1222:194:72","statements":[{"AST":{"nodeType":"YulBlock","src":"1305:101:72","statements":[{"nodeType":"YulAssignment","src":"1323:69:72","value":{"arguments":[{"name":"txGas","nodeType":"YulIdentifier","src":"1339:5:72"},{"name":"to","nodeType":"YulIdentifier","src":"1346:2:72"},{"name":"value","nodeType":"YulIdentifier","src":"1350:5:72"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1361:4:72"},{"kind":"number","nodeType":"YulLiteral","src":"1367:4:72","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1357:3:72"},"nodeType":"YulFunctionCall","src":"1357:15:72"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1380:4:72"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1374:5:72"},"nodeType":"YulFunctionCall","src":"1374:11:72"},{"kind":"number","nodeType":"YulLiteral","src":"1387:1:72","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1390:1:72","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"1334:4:72"},"nodeType":"YulFunctionCall","src":"1334:58:72"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"1323:7:72"}]}]},"evmVersion":"london","externalReferences":[{"declaration":56774,"isOffset":false,"isSlot":false,"src":"1361:4:72","valueSize":1},{"declaration":56774,"isOffset":false,"isSlot":false,"src":"1380:4:72","valueSize":1},{"declaration":56782,"isOffset":false,"isSlot":false,"src":"1323:7:72","valueSize":1},{"declaration":56770,"isOffset":false,"isSlot":false,"src":"1346:2:72","valueSize":1},{"declaration":56779,"isOffset":false,"isSlot":false,"src":"1339:5:72","valueSize":1},{"declaration":56772,"isOffset":false,"isSlot":false,"src":"1350:5:72","valueSize":1}],"id":56791,"nodeType":"InlineAssembly","src":"1296:110:72"}]},"id":56793,"nodeType":"IfStatement","src":"975:441:72","trueBody":{"id":56790,"nodeType":"Block","src":"1021:195:72","statements":[{"AST":{"nodeType":"YulBlock","src":"1104:102:72","statements":[{"nodeType":"YulAssignment","src":"1122:70:72","value":{"arguments":[{"name":"txGas","nodeType":"YulIdentifier","src":"1146:5:72"},{"name":"to","nodeType":"YulIdentifier","src":"1153:2:72"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1161:4:72"},{"kind":"number","nodeType":"YulLiteral","src":"1167:4:72","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1157:3:72"},"nodeType":"YulFunctionCall","src":"1157:15:72"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1180:4:72"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1174:5:72"},"nodeType":"YulFunctionCall","src":"1174:11:72"},{"kind":"number","nodeType":"YulLiteral","src":"1187:1:72","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1190:1:72","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"1133:12:72"},"nodeType":"YulFunctionCall","src":"1133:59:72"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"1122:7:72"}]}]},"evmVersion":"london","externalReferences":[{"declaration":56774,"isOffset":false,"isSlot":false,"src":"1161:4:72","valueSize":1},{"declaration":56774,"isOffset":false,"isSlot":false,"src":"1180:4:72","valueSize":1},{"declaration":56782,"isOffset":false,"isSlot":false,"src":"1122:7:72","valueSize":1},{"declaration":56770,"isOffset":false,"isSlot":false,"src":"1153:2:72","valueSize":1},{"declaration":56779,"isOffset":false,"isSlot":false,"src":"1146:5:72","valueSize":1}],"id":56789,"nodeType":"InlineAssembly","src":"1095:111:72"}]}}]},"documentation":{"id":56768,"nodeType":"StructuredDocumentation","src":"248:530:72","text":" @notice Executes either a delegatecall or a call with provided parameters.\n @dev This method doesn't perform any sanity check of the transaction, such as:\n      - if the contract at `to` address has code or not\n      It is the responsibility of the caller to perform such checks.\n @param to Destination address.\n @param value Ether value.\n @param data Data payload.\n @param operation Operation type.\n @return success boolean flag indicating if the call succeeded."},"implemented":true,"kind":"function","modifiers":[],"name":"execute","nameLocation":"792:7:72","parameters":{"id":56780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56770,"mutability":"mutable","name":"to","nameLocation":"817:2:72","nodeType":"VariableDeclaration","scope":56795,"src":"809:10:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56769,"name":"address","nodeType":"ElementaryTypeName","src":"809:7:72","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":56772,"mutability":"mutable","name":"value","nameLocation":"837:5:72","nodeType":"VariableDeclaration","scope":56795,"src":"829:13:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56771,"name":"uint256","nodeType":"ElementaryTypeName","src":"829:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":56774,"mutability":"mutable","name":"data","nameLocation":"865:4:72","nodeType":"VariableDeclaration","scope":56795,"src":"852:17:72","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":56773,"name":"bytes","nodeType":"ElementaryTypeName","src":"852:5:72","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":56777,"mutability":"mutable","name":"operation","nameLocation":"894:9:72","nodeType":"VariableDeclaration","scope":56795,"src":"879:24:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$57929","typeString":"enum Enum.Operation"},"typeName":{"id":56776,"nodeType":"UserDefinedTypeName","pathNode":{"id":56775,"name":"Enum.Operation","nodeType":"IdentifierPath","referencedDeclaration":57929,"src":"879:14:72"},"referencedDeclaration":57929,"src":"879:14:72","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$57929","typeString":"enum Enum.Operation"}},"visibility":"internal"},{"constant":false,"id":56779,"mutability":"mutable","name":"txGas","nameLocation":"921:5:72","nodeType":"VariableDeclaration","scope":56795,"src":"913:13:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56778,"name":"uint256","nodeType":"ElementaryTypeName","src":"913:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"799:133:72"},"returnParameters":{"id":56783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56782,"mutability":"mutable","name":"success","nameLocation":"956:7:72","nodeType":"VariableDeclaration","scope":56795,"src":"951:12:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":56781,"name":"bool","nodeType":"ElementaryTypeName","src":"951:4:72","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"950:14:72"},"scope":56796,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"Executor","contractDependencies":[],"contractKind":"contract","documentation":{"id":56767,"nodeType":"StructuredDocumentation","src":"104:110:72","text":" @title Executor - A contract that can execute transactions\n @author Richard Meissner - @rmeissner"},"fullyImplemented":true,"linearizedBaseContracts":[56796],"name":"Executor","nameLocation":"233:8:72","scope":56797,"usedErrors":[]}],"license":"LGPL-3.0-only"},"id":72}
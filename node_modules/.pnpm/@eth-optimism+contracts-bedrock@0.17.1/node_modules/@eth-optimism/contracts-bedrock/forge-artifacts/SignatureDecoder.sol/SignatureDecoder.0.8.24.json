{"abi":[],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Richard Meissner - @rmeissner\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SignatureDecoder - Decodes signatures encoded as bytes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/safe-contracts/contracts/common/SignatureDecoder.sol\":\"SignatureDecoder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/lib-keccak/lib/solady/src/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/safe-contracts/contracts/common/SignatureDecoder.sol\":{\"keccak256\":\"0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80\",\"dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@cwia/=lib/clones-with-immutable-args/src/","@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/lib-keccak/lib/solady/src/","clones-with-immutable-args/=lib/clones-with-immutable-args/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"lib/safe-contracts/contracts/common/SignatureDecoder.sol":"SignatureDecoder"},"evmVersion":"paris","libraries":{}},"sources":{"lib/safe-contracts/contracts/common/SignatureDecoder.sol":{"keccak256":"0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c","urls":["bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80","dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4"],"license":"LGPL-3.0-only"}},"version":1},"storageLayout":{"storage":[],"types":{}},"userdoc":{"version":1,"kind":"user"},"devdoc":{"version":1,"kind":"dev","author":"Richard Meissner - @rmeissner","title":"SignatureDecoder - Decodes signatures encoded as bytes"},"ast":{"absolutePath":"lib/safe-contracts/contracts/common/SignatureDecoder.sol","id":48174,"exportedSymbols":{"SignatureDecoder":[48173]},"nodeType":"SourceUnit","src":"42:1652:41","nodes":[{"id":48155,"nodeType":"PragmaDirective","src":"42:31:41","nodes":[],"literals":["solidity",">=","0.7",".0","<","0.9",".0"]},{"id":48173,"nodeType":"ContractDefinition","src":"189:1504:41","nodes":[{"id":48172,"nodeType":"FunctionDefinition","src":"947:744:41","nodes":[],"body":{"id":48171,"nodeType":"Block","src":"1063:628:41","nodes":[],"statements":[{"AST":{"nativeSrc":"1138:547:41","nodeType":"YulBlock","src":"1138:547:41","statements":[{"nativeSrc":"1152:34:41","nodeType":"YulVariableDeclaration","src":"1152:34:41","value":{"arguments":[{"kind":"number","nativeSrc":"1176:4:41","nodeType":"YulLiteral","src":"1176:4:41","type":"","value":"0x41"},{"name":"pos","nativeSrc":"1182:3:41","nodeType":"YulIdentifier","src":"1182:3:41"}],"functionName":{"name":"mul","nativeSrc":"1172:3:41","nodeType":"YulIdentifier","src":"1172:3:41"},"nativeSrc":"1172:14:41","nodeType":"YulFunctionCall","src":"1172:14:41"},"variables":[{"name":"signaturePos","nativeSrc":"1156:12:41","nodeType":"YulTypedName","src":"1156:12:41","type":""}]},{"nativeSrc":"1199:52:41","nodeType":"YulAssignment","src":"1199:52:41","value":{"arguments":[{"arguments":[{"name":"signatures","nativeSrc":"1214:10:41","nodeType":"YulIdentifier","src":"1214:10:41"},{"arguments":[{"name":"signaturePos","nativeSrc":"1230:12:41","nodeType":"YulIdentifier","src":"1230:12:41"},{"kind":"number","nativeSrc":"1244:4:41","nodeType":"YulLiteral","src":"1244:4:41","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1226:3:41","nodeType":"YulIdentifier","src":"1226:3:41"},"nativeSrc":"1226:23:41","nodeType":"YulFunctionCall","src":"1226:23:41"}],"functionName":{"name":"add","nativeSrc":"1210:3:41","nodeType":"YulIdentifier","src":"1210:3:41"},"nativeSrc":"1210:40:41","nodeType":"YulFunctionCall","src":"1210:40:41"}],"functionName":{"name":"mload","nativeSrc":"1204:5:41","nodeType":"YulIdentifier","src":"1204:5:41"},"nativeSrc":"1204:47:41","nodeType":"YulFunctionCall","src":"1204:47:41"},"variableNames":[{"name":"r","nativeSrc":"1199:1:41","nodeType":"YulIdentifier","src":"1199:1:41"}]},{"nativeSrc":"1264:52:41","nodeType":"YulAssignment","src":"1264:52:41","value":{"arguments":[{"arguments":[{"name":"signatures","nativeSrc":"1279:10:41","nodeType":"YulIdentifier","src":"1279:10:41"},{"arguments":[{"name":"signaturePos","nativeSrc":"1295:12:41","nodeType":"YulIdentifier","src":"1295:12:41"},{"kind":"number","nativeSrc":"1309:4:41","nodeType":"YulLiteral","src":"1309:4:41","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"1291:3:41","nodeType":"YulIdentifier","src":"1291:3:41"},"nativeSrc":"1291:23:41","nodeType":"YulFunctionCall","src":"1291:23:41"}],"functionName":{"name":"add","nativeSrc":"1275:3:41","nodeType":"YulIdentifier","src":"1275:3:41"},"nativeSrc":"1275:40:41","nodeType":"YulFunctionCall","src":"1275:40:41"}],"functionName":{"name":"mload","nativeSrc":"1269:5:41","nodeType":"YulIdentifier","src":"1269:5:41"},"nativeSrc":"1269:47:41","nodeType":"YulFunctionCall","src":"1269:47:41"},"variableNames":[{"name":"s","nativeSrc":"1264:1:41","nodeType":"YulIdentifier","src":"1264:1:41"}]},{"nativeSrc":"1612:63:41","nodeType":"YulAssignment","src":"1612:63:41","value":{"arguments":[{"arguments":[{"arguments":[{"name":"signatures","nativeSrc":"1631:10:41","nodeType":"YulIdentifier","src":"1631:10:41"},{"arguments":[{"name":"signaturePos","nativeSrc":"1647:12:41","nodeType":"YulIdentifier","src":"1647:12:41"},{"kind":"number","nativeSrc":"1661:4:41","nodeType":"YulLiteral","src":"1661:4:41","type":"","value":"0x41"}],"functionName":{"name":"add","nativeSrc":"1643:3:41","nodeType":"YulIdentifier","src":"1643:3:41"},"nativeSrc":"1643:23:41","nodeType":"YulFunctionCall","src":"1643:23:41"}],"functionName":{"name":"add","nativeSrc":"1627:3:41","nodeType":"YulIdentifier","src":"1627:3:41"},"nativeSrc":"1627:40:41","nodeType":"YulFunctionCall","src":"1627:40:41"}],"functionName":{"name":"mload","nativeSrc":"1621:5:41","nodeType":"YulIdentifier","src":"1621:5:41"},"nativeSrc":"1621:47:41","nodeType":"YulFunctionCall","src":"1621:47:41"},{"kind":"number","nativeSrc":"1670:4:41","nodeType":"YulLiteral","src":"1670:4:41","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"1617:3:41","nodeType":"YulIdentifier","src":"1617:3:41"},"nativeSrc":"1617:58:41","nodeType":"YulFunctionCall","src":"1617:58:41"},"variableNames":[{"name":"v","nativeSrc":"1612:1:41","nodeType":"YulIdentifier","src":"1612:1:41"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":48161,"isOffset":false,"isSlot":false,"src":"1182:3:41","valueSize":1},{"declaration":48166,"isOffset":false,"isSlot":false,"src":"1199:1:41","valueSize":1},{"declaration":48168,"isOffset":false,"isSlot":false,"src":"1264:1:41","valueSize":1},{"declaration":48159,"isOffset":false,"isSlot":false,"src":"1214:10:41","valueSize":1},{"declaration":48159,"isOffset":false,"isSlot":false,"src":"1279:10:41","valueSize":1},{"declaration":48159,"isOffset":false,"isSlot":false,"src":"1631:10:41","valueSize":1},{"declaration":48164,"isOffset":false,"isSlot":false,"src":"1612:1:41","valueSize":1}],"id":48170,"nodeType":"InlineAssembly","src":"1129:556:41"}]},"documentation":{"id":48157,"nodeType":"StructuredDocumentation","src":"230:712:41","text":" @notice Splits signature bytes into `uint8 v, bytes32 r, bytes32 s`.\n @dev Make sure to perform a bounds check for @param pos, to avoid out of bounds access on @param signatures\n      The signature format is a compact form of {bytes32 r}{bytes32 s}{uint8 v}\n      Compact means uint8 is not padded to 32 bytes.\n @param pos Which signature to read.\n            A prior bounds check of this parameter should be performed, to avoid out of bounds access.\n @param signatures Concatenated {r, s, v} signatures.\n @return v Recovery ID or Safe signature type.\n @return r Output value r of the signature.\n @return s Output value s of the signature."},"implemented":true,"kind":"function","modifiers":[],"name":"signatureSplit","nameLocation":"956:14:41","parameters":{"id":48162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48159,"mutability":"mutable","name":"signatures","nameLocation":"984:10:41","nodeType":"VariableDeclaration","scope":48172,"src":"971:23:41","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":48158,"name":"bytes","nodeType":"ElementaryTypeName","src":"971:5:41","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":48161,"mutability":"mutable","name":"pos","nameLocation":"1004:3:41","nodeType":"VariableDeclaration","scope":48172,"src":"996:11:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":48160,"name":"uint256","nodeType":"ElementaryTypeName","src":"996:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:38:41"},"returnParameters":{"id":48169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48164,"mutability":"mutable","name":"v","nameLocation":"1038:1:41","nodeType":"VariableDeclaration","scope":48172,"src":"1032:7:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":48163,"name":"uint8","nodeType":"ElementaryTypeName","src":"1032:5:41","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":48166,"mutability":"mutable","name":"r","nameLocation":"1049:1:41","nodeType":"VariableDeclaration","scope":48172,"src":"1041:9:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1041:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":48168,"mutability":"mutable","name":"s","nameLocation":"1060:1:41","nodeType":"VariableDeclaration","scope":48172,"src":"1052:9:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1052:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1031:31:41"},"scope":48173,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"SignatureDecoder","contractDependencies":[],"contractKind":"contract","documentation":{"id":48156,"nodeType":"StructuredDocumentation","src":"75:113:41","text":" @title SignatureDecoder - Decodes signatures encoded as bytes\n @author Richard Meissner - @rmeissner"},"fullyImplemented":true,"linearizedBaseContracts":[48173],"name":"SignatureDecoder","nameLocation":"207:16:41","scope":48174,"usedErrors":[],"usedEvents":[]}],"license":"LGPL-3.0-only"},"id":41}
{"abi":[{"type":"function","name":"createdAt","inputs":[],"outputs":[{"name":"createdAt_","type":"uint64","internalType":"Timestamp"}],"stateMutability":"view"},{"type":"function","name":"extraData","inputs":[],"outputs":[{"name":"extraData_","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"gameData","inputs":[],"outputs":[{"name":"gameType_","type":"uint32","internalType":"GameType"},{"name":"rootClaim_","type":"bytes32","internalType":"Claim"},{"name":"extraData_","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"gameType","inputs":[],"outputs":[{"name":"gameType_","type":"uint32","internalType":"GameType"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"resolve","inputs":[],"outputs":[{"name":"status_","type":"uint8","internalType":"enum GameStatus"}],"stateMutability":"nonpayable"},{"type":"function","name":"resolvedAt","inputs":[],"outputs":[{"name":"resolvedAt_","type":"uint64","internalType":"Timestamp"}],"stateMutability":"view"},{"type":"function","name":"rootClaim","inputs":[],"outputs":[{"name":"rootClaim_","type":"bytes32","internalType":"Claim"}],"stateMutability":"pure"},{"type":"function","name":"status","inputs":[],"outputs":[{"name":"status_","type":"uint8","internalType":"enum GameStatus"}],"stateMutability":"view"},{"type":"event","name":"Resolved","inputs":[{"name":"status","type":"uint8","indexed":true,"internalType":"enum GameStatus"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"createdAt()":"cf09e0d0","extraData()":"609d3334","gameData()":"fa24f743","gameType()":"bbdc02db","initialize()":"8129fc1c","resolve()":"2810e1d6","resolvedAt()":"19effeb4","rootClaim()":"bcef3b55","status()":"200d2ed2"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum GameStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"Resolved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"createdAt\",\"outputs\":[{\"internalType\":\"Timestamp\",\"name\":\"createdAt_\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"extraData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"extraData_\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameData\",\"outputs\":[{\"internalType\":\"GameType\",\"name\":\"gameType_\",\"type\":\"uint32\"},{\"internalType\":\"Claim\",\"name\":\"rootClaim_\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData_\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameType\",\"outputs\":[{\"internalType\":\"GameType\",\"name\":\"gameType_\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolve\",\"outputs\":[{\"internalType\":\"enum GameStatus\",\"name\":\"status_\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolvedAt\",\"outputs\":[{\"internalType\":\"Timestamp\",\"name\":\"resolvedAt_\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rootClaim\",\"outputs\":[{\"internalType\":\"Claim\",\"name\":\"rootClaim_\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"enum GameStatus\",\"name\":\"status_\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Resolved(uint8)\":{\"params\":{\"status\":\"The status of the game after resolution.\"}}},\"kind\":\"dev\",\"methods\":{\"createdAt()\":{\"returns\":{\"createdAt_\":\"The timestamp that the DisputeGame contract was created at.\"}},\"extraData()\":{\"details\":\"`clones-with-immutable-args` argument #2\",\"returns\":{\"extraData_\":\"Any extra data supplied to the dispute game contract by the creator.\"}},\"gameData()\":{\"returns\":{\"extraData_\":\"Any extra data supplied to the dispute game contract by the creator.\",\"gameType_\":\"The type of proof system being used.\",\"rootClaim_\":\"The root claim of the DisputeGame.\"}},\"gameType()\":{\"details\":\"The reference impl should be entirely different depending on the type (fault, validity)      i.e. The game type should indicate the security model.\",\"returns\":{\"gameType_\":\"The type of proof system being used.\"}},\"initialize()\":{\"details\":\"This function may only be called once.\"},\"resolve()\":{\"details\":\"May only be called if the `status` is `IN_PROGRESS`.\",\"returns\":{\"status_\":\"The status of the game after resolution.\"}},\"resolvedAt()\":{\"returns\":{\"resolvedAt_\":\"The timestamp that the DisputeGame contract was resolved at.\"}},\"rootClaim()\":{\"details\":\"`clones-with-immutable-args` argument #1\",\"returns\":{\"rootClaim_\":\"The root claim of the DisputeGame.\"}},\"status()\":{\"returns\":{\"status_\":\"The current status of the game.\"}}},\"title\":\"IDisputeGame\",\"version\":1},\"userdoc\":{\"events\":{\"Resolved(uint8)\":{\"notice\":\"Emitted when the game is resolved.\"}},\"kind\":\"user\",\"methods\":{\"createdAt()\":{\"notice\":\"Returns the timestamp that the DisputeGame contract was created at.\"},\"extraData()\":{\"notice\":\"Getter for the extra data.\"},\"gameData()\":{\"notice\":\"A compliant implementation of this interface should return the components of the         game UUID's preimage provided in the cwia payload. The preimage of the UUID is         constructed as `keccak256(gameType . rootClaim . extraData)` where `.` denotes         concatenation.\"},\"gameType()\":{\"notice\":\"Getter for the game type.\"},\"initialize()\":{\"notice\":\"Initializes the contract.\"},\"resolve()\":{\"notice\":\"If all necessary information has been gathered, this function should mark the game         status as either `CHALLENGER_WINS` or `DEFENDER_WINS` and return the status of         the resolved game. It is at this stage that the bonds should be awarded to the         necessary parties.\"},\"resolvedAt()\":{\"notice\":\"Returns the timestamp that the DisputeGame contract was resolved at.\"},\"rootClaim()\":{\"notice\":\"Getter for the root claim.\"},\"status()\":{\"notice\":\"Returns the current status of the game.\"}},\"notice\":\"The generic interface for a DisputeGame contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/dispute/interfaces/IDisputeGame.sol\":\"IDisputeGame\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/lib-keccak/lib/solady/src/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/dispute/interfaces/IDisputeGame.sol\":{\"keccak256\":\"0xe9f4fd0a027c3bbdc4fcaa07a41bb6e27708a3984efc43f5feb817a4be791506\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a94a8807d562cdf269fe0efee6fdd4f1c20b1e13996e0139f2c53f886bde571\",\"dweb:/ipfs/QmctLvYjq9jq3Cc7jdd7EPUKmYHwGCJ5QVbzAA38wo69aG\"]},\"src/dispute/interfaces/IInitializable.sol\":{\"keccak256\":\"0x30eca13613b0654e8beb1756cc952163abc9c6c92fe4b1baccd20eb73b17ca4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fca9e9815265c4457e9dde03476b190d300829aab42a779e2c0eb4a88eff3e7\",\"dweb:/ipfs/QmRdq93iUVtE5EGy1KxnWa8v3UjH48cgnekpg5sx33B9he\"]},\"src/dispute/lib/LibGameId.sol\":{\"keccak256\":\"0x9a9f30500da6eb7eeaa7193515dc5e45dc479f09ae7d522a07283c0fb5f4bfa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be113d8198d5822385de3d6ff3d7b3e8241993484aa95604ffaf38c2d33f40e0\",\"dweb:/ipfs/QmY9mHC52fqc4gAFYCGobNyuP4TqugQgs8o1kTF33t17Hc\"]},\"src/dispute/lib/LibHashing.sol\":{\"keccak256\":\"0x5a072cd028094eee55acb84ed8d08d7422b1fb46658b7e043e916781530a383b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b67e54f1318f1fd67b28b16c6861a56e27217c26a12aaea5c446e2ec53143920\",\"dweb:/ipfs/QmVLSTP3PwXzRkR3A4qV9fjZhca9v8J1EnEYuVGUsSirAq\"]},\"src/dispute/lib/LibPosition.sol\":{\"keccak256\":\"0xfeb49b2421dbacc775aa27adf3b7803ebf84b47ac8f5b9fbc372bd9c45b76504\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95dc9d09fc4dbb4a7d7ffa70cb275277635d4fd1554421a65fd2e1329fddb059\",\"dweb:/ipfs/QmVGHtM3ABWEBFETvAz6sBucirsRfuTrn2CdiUBH1nt3un\"]},\"src/dispute/lib/LibUDT.sol\":{\"keccak256\":\"0x42cd5a022686434153142b10871ff07e7ed27d32c28d5285f5d2cc6b7de1510c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06e460b40977e0668dd27fcc4dd5496e24561e5e9c64cf812e077e2d5db60ffa\",\"dweb:/ipfs/QmTrbrc7ykFhLmtEdKWq9sANRbuDMvjqthUNxtEkW3vTGg\"]},\"src/libraries/DisputeErrors.sol\":{\"keccak256\":\"0x8e8be49421a00de964e1de84ac705709ddc1edf3cd02a5acb6c29f4984a3d780\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0276278752fc662727697315467a63ee6db1c81f9fdc3c549e2bcc60447890b9\",\"dweb:/ipfs/QmWLnedbgy6Y5LAaPYYRZn8xneMjRhw63iaaR4KQz7Zmts\"]},\"src/libraries/DisputeTypes.sol\":{\"keccak256\":\"0xf42eeeae7e588f63cb5314e56549df8b2f817daf2c648497c0b947081eceb539\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fa815d84de6e457048c7809b1a4f08c2c6983a72f8237b25158bf4aabbebe53\",\"dweb:/ipfs/QmSuG32A9jvSxjxm7WNmXQSEwLvfghcbnYyTZqMaQuDFt4\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"enum GameStatus","name":"status","type":"uint8","indexed":true}],"type":"event","name":"Resolved","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"createdAt","outputs":[{"internalType":"Timestamp","name":"createdAt_","type":"uint64"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"extraData","outputs":[{"internalType":"bytes","name":"extraData_","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"gameData","outputs":[{"internalType":"GameType","name":"gameType_","type":"uint32"},{"internalType":"Claim","name":"rootClaim_","type":"bytes32"},{"internalType":"bytes","name":"extraData_","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"gameType","outputs":[{"internalType":"GameType","name":"gameType_","type":"uint32"}]},{"inputs":[],"stateMutability":"payable","type":"function","name":"initialize"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resolve","outputs":[{"internalType":"enum GameStatus","name":"status_","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"resolvedAt","outputs":[{"internalType":"Timestamp","name":"resolvedAt_","type":"uint64"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"rootClaim","outputs":[{"internalType":"Claim","name":"rootClaim_","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"status","outputs":[{"internalType":"enum GameStatus","name":"status_","type":"uint8"}]}],"devdoc":{"kind":"dev","methods":{"createdAt()":{"returns":{"createdAt_":"The timestamp that the DisputeGame contract was created at."}},"extraData()":{"details":"`clones-with-immutable-args` argument #2","returns":{"extraData_":"Any extra data supplied to the dispute game contract by the creator."}},"gameData()":{"returns":{"extraData_":"Any extra data supplied to the dispute game contract by the creator.","gameType_":"The type of proof system being used.","rootClaim_":"The root claim of the DisputeGame."}},"gameType()":{"details":"The reference impl should be entirely different depending on the type (fault, validity)      i.e. The game type should indicate the security model.","returns":{"gameType_":"The type of proof system being used."}},"initialize()":{"details":"This function may only be called once."},"resolve()":{"details":"May only be called if the `status` is `IN_PROGRESS`.","returns":{"status_":"The status of the game after resolution."}},"resolvedAt()":{"returns":{"resolvedAt_":"The timestamp that the DisputeGame contract was resolved at."}},"rootClaim()":{"details":"`clones-with-immutable-args` argument #1","returns":{"rootClaim_":"The root claim of the DisputeGame."}},"status()":{"returns":{"status_":"The current status of the game."}}},"version":1},"userdoc":{"kind":"user","methods":{"createdAt()":{"notice":"Returns the timestamp that the DisputeGame contract was created at."},"extraData()":{"notice":"Getter for the extra data."},"gameData()":{"notice":"A compliant implementation of this interface should return the components of the         game UUID's preimage provided in the cwia payload. The preimage of the UUID is         constructed as `keccak256(gameType . rootClaim . extraData)` where `.` denotes         concatenation."},"gameType()":{"notice":"Getter for the game type."},"initialize()":{"notice":"Initializes the contract."},"resolve()":{"notice":"If all necessary information has been gathered, this function should mark the game         status as either `CHALLENGER_WINS` or `DEFENDER_WINS` and return the status of         the resolved game. It is at this stage that the bonds should be awarded to the         necessary parties."},"resolvedAt()":{"notice":"Returns the timestamp that the DisputeGame contract was resolved at."},"rootClaim()":{"notice":"Getter for the root claim."},"status()":{"notice":"Returns the current status of the game."}},"version":1}},"settings":{"remappings":["@cwia/=lib/clones-with-immutable-args/src/","@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/lib-keccak/lib/solady/src/","clones-with-immutable-args/=lib/clones-with-immutable-args/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/dispute/interfaces/IDisputeGame.sol":"IDisputeGame"},"evmVersion":"paris","libraries":{}},"sources":{"src/dispute/interfaces/IDisputeGame.sol":{"keccak256":"0xe9f4fd0a027c3bbdc4fcaa07a41bb6e27708a3984efc43f5feb817a4be791506","urls":["bzz-raw://6a94a8807d562cdf269fe0efee6fdd4f1c20b1e13996e0139f2c53f886bde571","dweb:/ipfs/QmctLvYjq9jq3Cc7jdd7EPUKmYHwGCJ5QVbzAA38wo69aG"],"license":"MIT"},"src/dispute/interfaces/IInitializable.sol":{"keccak256":"0x30eca13613b0654e8beb1756cc952163abc9c6c92fe4b1baccd20eb73b17ca4f","urls":["bzz-raw://4fca9e9815265c4457e9dde03476b190d300829aab42a779e2c0eb4a88eff3e7","dweb:/ipfs/QmRdq93iUVtE5EGy1KxnWa8v3UjH48cgnekpg5sx33B9he"],"license":"MIT"},"src/dispute/lib/LibGameId.sol":{"keccak256":"0x9a9f30500da6eb7eeaa7193515dc5e45dc479f09ae7d522a07283c0fb5f4bfa6","urls":["bzz-raw://be113d8198d5822385de3d6ff3d7b3e8241993484aa95604ffaf38c2d33f40e0","dweb:/ipfs/QmY9mHC52fqc4gAFYCGobNyuP4TqugQgs8o1kTF33t17Hc"],"license":"MIT"},"src/dispute/lib/LibHashing.sol":{"keccak256":"0x5a072cd028094eee55acb84ed8d08d7422b1fb46658b7e043e916781530a383b","urls":["bzz-raw://b67e54f1318f1fd67b28b16c6861a56e27217c26a12aaea5c446e2ec53143920","dweb:/ipfs/QmVLSTP3PwXzRkR3A4qV9fjZhca9v8J1EnEYuVGUsSirAq"],"license":"MIT"},"src/dispute/lib/LibPosition.sol":{"keccak256":"0xfeb49b2421dbacc775aa27adf3b7803ebf84b47ac8f5b9fbc372bd9c45b76504","urls":["bzz-raw://95dc9d09fc4dbb4a7d7ffa70cb275277635d4fd1554421a65fd2e1329fddb059","dweb:/ipfs/QmVGHtM3ABWEBFETvAz6sBucirsRfuTrn2CdiUBH1nt3un"],"license":"MIT"},"src/dispute/lib/LibUDT.sol":{"keccak256":"0x42cd5a022686434153142b10871ff07e7ed27d32c28d5285f5d2cc6b7de1510c","urls":["bzz-raw://06e460b40977e0668dd27fcc4dd5496e24561e5e9c64cf812e077e2d5db60ffa","dweb:/ipfs/QmTrbrc7ykFhLmtEdKWq9sANRbuDMvjqthUNxtEkW3vTGg"],"license":"MIT"},"src/libraries/DisputeErrors.sol":{"keccak256":"0x8e8be49421a00de964e1de84ac705709ddc1edf3cd02a5acb6c29f4984a3d780","urls":["bzz-raw://0276278752fc662727697315467a63ee6db1c81f9fdc3c549e2bcc60447890b9","dweb:/ipfs/QmWLnedbgy6Y5LAaPYYRZn8xneMjRhw63iaaR4KQz7Zmts"],"license":"MIT"},"src/libraries/DisputeTypes.sol":{"keccak256":"0xf42eeeae7e588f63cb5314e56549df8b2f817daf2c648497c0b947081eceb539","urls":["bzz-raw://4fa815d84de6e457048c7809b1a4f08c2c6983a72f8237b25158bf4aabbebe53","dweb:/ipfs/QmSuG32A9jvSxjxm7WNmXQSEwLvfghcbnYyTZqMaQuDFt4"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"userdoc":{"version":1,"kind":"user","methods":{"createdAt()":{"notice":"Returns the timestamp that the DisputeGame contract was created at."},"extraData()":{"notice":"Getter for the extra data."},"gameData()":{"notice":"A compliant implementation of this interface should return the components of the         game UUID's preimage provided in the cwia payload. The preimage of the UUID is         constructed as `keccak256(gameType . rootClaim . extraData)` where `.` denotes         concatenation."},"gameType()":{"notice":"Getter for the game type."},"initialize()":{"notice":"Initializes the contract."},"resolve()":{"notice":"If all necessary information has been gathered, this function should mark the game         status as either `CHALLENGER_WINS` or `DEFENDER_WINS` and return the status of         the resolved game. It is at this stage that the bonds should be awarded to the         necessary parties."},"resolvedAt()":{"notice":"Returns the timestamp that the DisputeGame contract was resolved at."},"rootClaim()":{"notice":"Getter for the root claim."},"status()":{"notice":"Returns the current status of the game."}},"events":{"Resolved(uint8)":{"notice":"Emitted when the game is resolved."}},"notice":"The generic interface for a DisputeGame contract."},"devdoc":{"version":1,"kind":"dev","methods":{"createdAt()":{"returns":{"createdAt_":"The timestamp that the DisputeGame contract was created at."}},"extraData()":{"details":"`clones-with-immutable-args` argument #2","returns":{"extraData_":"Any extra data supplied to the dispute game contract by the creator."}},"gameData()":{"returns":{"extraData_":"Any extra data supplied to the dispute game contract by the creator.","gameType_":"The type of proof system being used.","rootClaim_":"The root claim of the DisputeGame."}},"gameType()":{"details":"The reference impl should be entirely different depending on the type (fault, validity)      i.e. The game type should indicate the security model.","returns":{"gameType_":"The type of proof system being used."}},"initialize()":{"details":"This function may only be called once."},"resolve()":{"details":"May only be called if the `status` is `IN_PROGRESS`.","returns":{"status_":"The status of the game after resolution."}},"resolvedAt()":{"returns":{"resolvedAt_":"The timestamp that the DisputeGame contract was resolved at."}},"rootClaim()":{"details":"`clones-with-immutable-args` argument #1","returns":{"rootClaim_":"The root claim of the DisputeGame."}},"status()":{"returns":{"status_":"The current status of the game."}}},"events":{"Resolved(uint8)":{"params":{"status":"The status of the game after resolution."}}},"title":"IDisputeGame"},"ast":{"absolutePath":"src/dispute/interfaces/IDisputeGame.sol","id":55765,"exportedSymbols":{"BondAmount":[56920],"Claim":[56916],"ClaimHash":[56918],"Clock":[56928],"Duration":[56924],"GameId":[56926],"GameStatus":[56939],"GameType":[56932],"GameTypes":[56957],"Hash":[56914],"IDisputeGame":[55764],"IInitializable":[56040],"LibClaim":[56386],"LibClock":[56373],"LibDuration":[56399],"LibGameId":[56082],"LibGameType":[56451],"LibHash":[56412],"LibHashing":[56104],"LibPosition":[56318],"LibTimestamp":[56425],"LibVMStatus":[56438],"LocalPreimageKey":[57013],"Position":[56930],"Timestamp":[56922],"VMStatus":[56934],"VMStatuses":[56991]},"nodeType":"SourceUnit","src":"32:3114:75","nodes":[{"id":55691,"nodeType":"PragmaDirective","src":"32:24:75","nodes":[],"literals":["solidity","^","0.8",".15"]},{"id":55693,"nodeType":"ImportDirective","src":"58:75:75","nodes":[],"absolutePath":"src/dispute/interfaces/IInitializable.sol","file":"src/dispute/interfaces/IInitializable.sol","nameLocation":"-1:-1:-1","scope":55765,"sourceUnit":56041,"symbolAliases":[{"foreign":{"id":55692,"name":"IInitializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56040,"src":"67:14:75","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":55694,"nodeType":"ImportDirective","src":"135:40:75","nodes":[],"absolutePath":"src/libraries/DisputeTypes.sol","file":"src/libraries/DisputeTypes.sol","nameLocation":"-1:-1:-1","scope":55765,"sourceUnit":57014,"symbolAliases":[],"unitAlias":""},{"id":55764,"nodeType":"ContractDefinition","src":"263:2882:75","nodes":[{"id":55703,"nodeType":"EventDefinition","src":"424:42:75","nodes":[],"anonymous":false,"documentation":{"id":55698,"nodeType":"StructuredDocumentation","src":"310:109:75","text":"@notice Emitted when the game is resolved.\n @param status The status of the game after resolution."},"eventSelector":"5e186f09b9c93491f14e277eea7faa5de6a2d4bda75a79af7a3684fbfb42da60","name":"Resolved","nameLocation":"430:8:75","parameters":{"id":55702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55701,"indexed":true,"mutability":"mutable","name":"status","nameLocation":"458:6:75","nodeType":"VariableDeclaration","scope":55703,"src":"439:25:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$56939","typeString":"enum GameStatus"},"typeName":{"id":55700,"nodeType":"UserDefinedTypeName","pathNode":{"id":55699,"name":"GameStatus","nameLocations":["439:10:75"],"nodeType":"IdentifierPath","referencedDeclaration":56939,"src":"439:10:75"},"referencedDeclaration":56939,"src":"439:10:75","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$56939","typeString":"enum GameStatus"}},"visibility":"internal"}],"src":"438:27:75"}},{"id":55710,"nodeType":"FunctionDefinition","src":"643:66:75","nodes":[],"documentation":{"id":55704,"nodeType":"StructuredDocumentation","src":"472:166:75","text":"@notice Returns the timestamp that the DisputeGame contract was created at.\n @return createdAt_ The timestamp that the DisputeGame contract was created at."},"functionSelector":"cf09e0d0","implemented":false,"kind":"function","modifiers":[],"name":"createdAt","nameLocation":"652:9:75","parameters":{"id":55705,"nodeType":"ParameterList","parameters":[],"src":"661:2:75"},"returnParameters":{"id":55709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55708,"mutability":"mutable","name":"createdAt_","nameLocation":"697:10:75","nodeType":"VariableDeclaration","scope":55710,"src":"687:20:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timestamp_$56922","typeString":"Timestamp"},"typeName":{"id":55707,"nodeType":"UserDefinedTypeName","pathNode":{"id":55706,"name":"Timestamp","nameLocations":["687:9:75"],"nodeType":"IdentifierPath","referencedDeclaration":56922,"src":"687:9:75"},"referencedDeclaration":56922,"src":"687:9:75","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timestamp_$56922","typeString":"Timestamp"}},"visibility":"internal"}],"src":"686:22:75"},"scope":55764,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":55717,"nodeType":"FunctionDefinition","src":"889:68:75","nodes":[],"documentation":{"id":55711,"nodeType":"StructuredDocumentation","src":"715:169:75","text":"@notice Returns the timestamp that the DisputeGame contract was resolved at.\n @return resolvedAt_ The timestamp that the DisputeGame contract was resolved at."},"functionSelector":"19effeb4","implemented":false,"kind":"function","modifiers":[],"name":"resolvedAt","nameLocation":"898:10:75","parameters":{"id":55712,"nodeType":"ParameterList","parameters":[],"src":"908:2:75"},"returnParameters":{"id":55716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55715,"mutability":"mutable","name":"resolvedAt_","nameLocation":"944:11:75","nodeType":"VariableDeclaration","scope":55717,"src":"934:21:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timestamp_$56922","typeString":"Timestamp"},"typeName":{"id":55714,"nodeType":"UserDefinedTypeName","pathNode":{"id":55713,"name":"Timestamp","nameLocations":["934:9:75"],"nodeType":"IdentifierPath","referencedDeclaration":56922,"src":"934:9:75"},"referencedDeclaration":56922,"src":"934:9:75","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Timestamp_$56922","typeString":"Timestamp"}},"visibility":"internal"}],"src":"933:23:75"},"scope":55764,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":55724,"nodeType":"FunctionDefinition","src":"1075:61:75","nodes":[],"documentation":{"id":55718,"nodeType":"StructuredDocumentation","src":"963:107:75","text":"@notice Returns the current status of the game.\n @return status_ The current status of the game."},"functionSelector":"200d2ed2","implemented":false,"kind":"function","modifiers":[],"name":"status","nameLocation":"1084:6:75","parameters":{"id":55719,"nodeType":"ParameterList","parameters":[],"src":"1090:2:75"},"returnParameters":{"id":55723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55722,"mutability":"mutable","name":"status_","nameLocation":"1127:7:75","nodeType":"VariableDeclaration","scope":55724,"src":"1116:18:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$56939","typeString":"enum GameStatus"},"typeName":{"id":55721,"nodeType":"UserDefinedTypeName","pathNode":{"id":55720,"name":"GameStatus","nameLocations":["1116:10:75"],"nodeType":"IdentifierPath","referencedDeclaration":56939,"src":"1116:10:75"},"referencedDeclaration":56939,"src":"1116:10:75","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$56939","typeString":"enum GameStatus"}},"visibility":"internal"}],"src":"1115:20:75"},"scope":55764,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":55731,"nodeType":"FunctionDefinition","src":"1416:63:75","nodes":[],"documentation":{"id":55725,"nodeType":"StructuredDocumentation","src":"1142:269:75","text":"@notice Getter for the game type.\n @dev The reference impl should be entirely different depending on the type (fault, validity)\n      i.e. The game type should indicate the security model.\n @return gameType_ The type of proof system being used."},"functionSelector":"bbdc02db","implemented":false,"kind":"function","modifiers":[],"name":"gameType","nameLocation":"1425:8:75","parameters":{"id":55726,"nodeType":"ParameterList","parameters":[],"src":"1433:2:75"},"returnParameters":{"id":55730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55729,"mutability":"mutable","name":"gameType_","nameLocation":"1468:9:75","nodeType":"VariableDeclaration","scope":55731,"src":"1459:18:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_GameType_$56932","typeString":"GameType"},"typeName":{"id":55728,"nodeType":"UserDefinedTypeName","pathNode":{"id":55727,"name":"GameType","nameLocations":["1459:8:75"],"nodeType":"IdentifierPath","referencedDeclaration":56932,"src":"1459:8:75"},"referencedDeclaration":56932,"src":"1459:8:75","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_GameType_$56932","typeString":"GameType"}},"visibility":"internal"}],"src":"1458:20:75"},"scope":55764,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":55738,"nodeType":"FunctionDefinition","src":"1644:62:75","nodes":[],"documentation":{"id":55732,"nodeType":"StructuredDocumentation","src":"1485:154:75","text":"@notice Getter for the root claim.\n @dev `clones-with-immutable-args` argument #1\n @return rootClaim_ The root claim of the DisputeGame."},"functionSelector":"bcef3b55","implemented":false,"kind":"function","modifiers":[],"name":"rootClaim","nameLocation":"1653:9:75","parameters":{"id":55733,"nodeType":"ParameterList","parameters":[],"src":"1662:2:75"},"returnParameters":{"id":55737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55736,"mutability":"mutable","name":"rootClaim_","nameLocation":"1694:10:75","nodeType":"VariableDeclaration","scope":55738,"src":"1688:16:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Claim_$56916","typeString":"Claim"},"typeName":{"id":55735,"nodeType":"UserDefinedTypeName","pathNode":{"id":55734,"name":"Claim","nameLocations":["1688:5:75"],"nodeType":"IdentifierPath","referencedDeclaration":56916,"src":"1688:5:75"},"referencedDeclaration":56916,"src":"1688:5:75","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Claim_$56916","typeString":"Claim"}},"visibility":"internal"}],"src":"1687:18:75"},"scope":55764,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":55744,"nodeType":"FunctionDefinition","src":"1905:69:75","nodes":[],"documentation":{"id":55739,"nodeType":"StructuredDocumentation","src":"1712:188:75","text":"@notice Getter for the extra data.\n @dev `clones-with-immutable-args` argument #2\n @return extraData_ Any extra data supplied to the dispute game contract by the creator."},"functionSelector":"609d3334","implemented":false,"kind":"function","modifiers":[],"name":"extraData","nameLocation":"1914:9:75","parameters":{"id":55740,"nodeType":"ParameterList","parameters":[],"src":"1923:2:75"},"returnParameters":{"id":55743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55742,"mutability":"mutable","name":"extraData_","nameLocation":"1962:10:75","nodeType":"VariableDeclaration","scope":55744,"src":"1949:23:75","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":55741,"name":"bytes","nodeType":"ElementaryTypeName","src":"1949:5:75","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1948:25:75"},"scope":55764,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":55751,"nodeType":"FunctionDefinition","src":"2435:57:75","nodes":[],"documentation":{"id":55745,"nodeType":"StructuredDocumentation","src":"1980:450:75","text":"@notice If all necessary information has been gathered, this function should mark the game\n         status as either `CHALLENGER_WINS` or `DEFENDER_WINS` and return the status of\n         the resolved game. It is at this stage that the bonds should be awarded to the\n         necessary parties.\n @dev May only be called if the `status` is `IN_PROGRESS`.\n @return status_ The status of the game after resolution."},"functionSelector":"2810e1d6","implemented":false,"kind":"function","modifiers":[],"name":"resolve","nameLocation":"2444:7:75","parameters":{"id":55746,"nodeType":"ParameterList","parameters":[],"src":"2451:2:75"},"returnParameters":{"id":55750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55749,"mutability":"mutable","name":"status_","nameLocation":"2483:7:75","nodeType":"VariableDeclaration","scope":55751,"src":"2472:18:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$56939","typeString":"enum GameStatus"},"typeName":{"id":55748,"nodeType":"UserDefinedTypeName","pathNode":{"id":55747,"name":"GameStatus","nameLocations":["2472:10:75"],"nodeType":"IdentifierPath","referencedDeclaration":56939,"src":"2472:10:75"},"referencedDeclaration":56939,"src":"2472:10:75","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$56939","typeString":"enum GameStatus"}},"visibility":"internal"}],"src":"2471:20:75"},"scope":55764,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":55763,"nodeType":"FunctionDefinition","src":"3037:106:75","nodes":[],"documentation":{"id":55752,"nodeType":"StructuredDocumentation","src":"2498:534:75","text":"@notice A compliant implementation of this interface should return the components of the\n         game UUID's preimage provided in the cwia payload. The preimage of the UUID is\n         constructed as `keccak256(gameType . rootClaim . extraData)` where `.` denotes\n         concatenation.\n @return gameType_ The type of proof system being used.\n @return rootClaim_ The root claim of the DisputeGame.\n @return extraData_ Any extra data supplied to the dispute game contract by the creator."},"functionSelector":"fa24f743","implemented":false,"kind":"function","modifiers":[],"name":"gameData","nameLocation":"3046:8:75","parameters":{"id":55753,"nodeType":"ParameterList","parameters":[],"src":"3054:2:75"},"returnParameters":{"id":55762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55756,"mutability":"mutable","name":"gameType_","nameLocation":"3089:9:75","nodeType":"VariableDeclaration","scope":55763,"src":"3080:18:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_GameType_$56932","typeString":"GameType"},"typeName":{"id":55755,"nodeType":"UserDefinedTypeName","pathNode":{"id":55754,"name":"GameType","nameLocations":["3080:8:75"],"nodeType":"IdentifierPath","referencedDeclaration":56932,"src":"3080:8:75"},"referencedDeclaration":56932,"src":"3080:8:75","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_GameType_$56932","typeString":"GameType"}},"visibility":"internal"},{"constant":false,"id":55759,"mutability":"mutable","name":"rootClaim_","nameLocation":"3106:10:75","nodeType":"VariableDeclaration","scope":55763,"src":"3100:16:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Claim_$56916","typeString":"Claim"},"typeName":{"id":55758,"nodeType":"UserDefinedTypeName","pathNode":{"id":55757,"name":"Claim","nameLocations":["3100:5:75"],"nodeType":"IdentifierPath","referencedDeclaration":56916,"src":"3100:5:75"},"referencedDeclaration":56916,"src":"3100:5:75","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Claim_$56916","typeString":"Claim"}},"visibility":"internal"},{"constant":false,"id":55761,"mutability":"mutable","name":"extraData_","nameLocation":"3131:10:75","nodeType":"VariableDeclaration","scope":55763,"src":"3118:23:75","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":55760,"name":"bytes","nodeType":"ElementaryTypeName","src":"3118:5:75","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3079:63:75"},"scope":55764,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":55696,"name":"IInitializable","nameLocations":["289:14:75"],"nodeType":"IdentifierPath","referencedDeclaration":56040,"src":"289:14:75"},"id":55697,"nodeType":"InheritanceSpecifier","src":"289:14:75"}],"canonicalName":"IDisputeGame","contractDependencies":[],"contractKind":"interface","documentation":{"id":55695,"nodeType":"StructuredDocumentation","src":"177:86:75","text":"@title IDisputeGame\n @notice The generic interface for a DisputeGame contract."},"fullyImplemented":false,"linearizedBaseContracts":[55764,56040],"name":"IDisputeGame","nameLocation":"273:12:75","scope":55765,"usedErrors":[],"usedEvents":[55703]}],"license":"MIT"},"id":75}
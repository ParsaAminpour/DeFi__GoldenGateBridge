{"abi":[],"bytecode":{"object":"0x602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000818000a","sourceMap":"311:1885:97:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;311:1885:97;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000818000a","sourceMap":"311:1885:97:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"SecureMerkleTrie\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"SecureMerkleTrie is a thin wrapper around the MerkleTrie library that hashes the input         keys. Ethereum's state trie hashes input keys before storing them.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/trie/SecureMerkleTrie.sol\":\"SecureMerkleTrie\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/lib-keccak/lib/solady/src/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/libraries/Bytes.sol\":{\"keccak256\":\"0x827f47d123b0fdf3b08816d5b33831811704dbf4e554e53f2269354f6bba8859\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3137ac7204d30a245a8b0d67aa6da5286f1bd8c90379daab561f84963b6db782\",\"dweb:/ipfs/QmWRhisw3axJK833gUScs23ETh2MLFbVzzqzYVMKSDN3S9\"]},\"src/libraries/rlp/RLPReader.sol\":{\"keccak256\":\"0x9ba74a3b0a11693e622380807d213d5d1250d974e18b2cd768da9cbe719a6778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808d721ed9e05707526ee134faa051d707a95ee6b8bd6e0b1972275da8e5723\",\"dweb:/ipfs/QmcTTPu9xgckfWdbFUAcr2RAgk3J6vzyR4FpV798TjFMeN\"]},\"src/libraries/trie/MerkleTrie.sol\":{\"keccak256\":\"0xf8ba770ee6666e73ae43184c700e9c704b2c4ace71f9e3c2227ddc11a8148b4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4702ccee1fe44aea3ee01d59e6152eb755da083f786f00947fec4437c064fe74\",\"dweb:/ipfs/QmQjFj5J7hrEM1dxJjFszzW2Cs7g7eMhYNBXonF2DXBstE\"]},\"src/libraries/trie/SecureMerkleTrie.sol\":{\"keccak256\":\"0xeaff8315cfd21197bc6bc859c2decf5d4f4838c9c357c502cdf2b1eac863d288\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79dcdcaa560aea51d138da4f5dc553a1808b6de090b2dc1629f18375edbff681\",\"dweb:/ipfs/QmbE4pUPhf5fLKW4W6cEjhQs55gEDvHmbmoBqkW1yz3bnw\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@cwia/=lib/clones-with-immutable-args/src/","@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/lib-keccak/lib/solady/src/","clones-with-immutable-args/=lib/clones-with-immutable-args/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/libraries/trie/SecureMerkleTrie.sol":"SecureMerkleTrie"},"evmVersion":"paris","libraries":{}},"sources":{"src/libraries/Bytes.sol":{"keccak256":"0x827f47d123b0fdf3b08816d5b33831811704dbf4e554e53f2269354f6bba8859","urls":["bzz-raw://3137ac7204d30a245a8b0d67aa6da5286f1bd8c90379daab561f84963b6db782","dweb:/ipfs/QmWRhisw3axJK833gUScs23ETh2MLFbVzzqzYVMKSDN3S9"],"license":"MIT"},"src/libraries/rlp/RLPReader.sol":{"keccak256":"0x9ba74a3b0a11693e622380807d213d5d1250d974e18b2cd768da9cbe719a6778","urls":["bzz-raw://0808d721ed9e05707526ee134faa051d707a95ee6b8bd6e0b1972275da8e5723","dweb:/ipfs/QmcTTPu9xgckfWdbFUAcr2RAgk3J6vzyR4FpV798TjFMeN"],"license":"MIT"},"src/libraries/trie/MerkleTrie.sol":{"keccak256":"0xf8ba770ee6666e73ae43184c700e9c704b2c4ace71f9e3c2227ddc11a8148b4c","urls":["bzz-raw://4702ccee1fe44aea3ee01d59e6152eb755da083f786f00947fec4437c064fe74","dweb:/ipfs/QmQjFj5J7hrEM1dxJjFszzW2Cs7g7eMhYNBXonF2DXBstE"],"license":"MIT"},"src/libraries/trie/SecureMerkleTrie.sol":{"keccak256":"0xeaff8315cfd21197bc6bc859c2decf5d4f4838c9c357c502cdf2b1eac863d288","urls":["bzz-raw://79dcdcaa560aea51d138da4f5dc553a1808b6de090b2dc1629f18375edbff681","dweb:/ipfs/QmbE4pUPhf5fLKW4W6cEjhQs55gEDvHmbmoBqkW1yz3bnw"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"userdoc":{"version":1,"kind":"user","notice":"SecureMerkleTrie is a thin wrapper around the MerkleTrie library that hashes the input         keys. Ethereum's state trie hashes input keys before storing them."},"devdoc":{"version":1,"kind":"dev","title":"SecureMerkleTrie"},"ast":{"absolutePath":"src/libraries/trie/SecureMerkleTrie.sol","id":59563,"exportedSymbols":{"MerkleTrie":[59477],"SecureMerkleTrie":[59562]},"nodeType":"SourceUnit","src":"32:2165:97","nodes":[{"id":59479,"nodeType":"PragmaDirective","src":"32:23:97","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":59481,"nodeType":"ImportDirective","src":"57:46:97","nodes":[],"absolutePath":"src/libraries/trie/MerkleTrie.sol","file":"./MerkleTrie.sol","nameLocation":"-1:-1:-1","scope":59563,"sourceUnit":59478,"symbolAliases":[{"foreign":{"id":59480,"name":"MerkleTrie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59477,"src":"66:10:97","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59562,"nodeType":"ContractDefinition","src":"311:1885:97","nodes":[{"id":59514,"nodeType":"FunctionDefinition","src":"1041:343:97","nodes":[],"body":{"id":59513,"nodeType":"Block","src":"1251:133:97","nodes":[],"statements":[{"assignments":[59498],"declarations":[{"constant":false,"id":59498,"mutability":"mutable","name":"key","nameLocation":"1274:3:97","nodeType":"VariableDeclaration","scope":59513,"src":"1261:16:97","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":59497,"name":"bytes","nodeType":"ElementaryTypeName","src":"1261:5:97","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":59502,"initialValue":{"arguments":[{"id":59500,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59485,"src":"1294:4:97","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":59499,"name":"_getSecureKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59561,"src":"1280:13:97","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":59501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1280:19:97","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1261:38:97"},{"expression":{"id":59511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":59503,"name":"valid_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59495,"src":"1309:6:97","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":59506,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59498,"src":"1350:3:97","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":59507,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59487,"src":"1355:6:97","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":59508,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59490,"src":"1363:6:97","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"id":59509,"name":"_root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59492,"src":"1371:5:97","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":59504,"name":"MerkleTrie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59477,"src":"1318:10:97","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleTrie_$59477_$","typeString":"type(library MerkleTrie)"}},"id":59505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1329:20:97","memberName":"verifyInclusionProof","nodeType":"MemberAccess","referencedDeclaration":58982,"src":"1318:31:97","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes memory,bytes memory,bytes memory[] memory,bytes32) pure returns (bool)"}},"id":59510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1318:59:97","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1309:68:97","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":59512,"nodeType":"ExpressionStatement","src":"1309:68:97"}]},"documentation":{"id":59483,"nodeType":"StructuredDocumentation","src":"342:694:97","text":"@notice Verifies a proof that a given key/value pair is present in the Merkle trie.\n @param _key   Key of the node to search for, as a hex string.\n @param _value Value of the node to search for, as a hex string.\n @param _proof Merkle trie inclusion proof for the desired node. Unlike traditional Merkle\n               trees, this proof is executed top-down and consists of a list of RLP-encoded\n               nodes that make a path down to the target node.\n @param _root  Known root of the Merkle trie. Used to verify that the included proof is\n               correctly constructed.\n @return valid_ Whether or not the proof is valid."},"implemented":true,"kind":"function","modifiers":[],"name":"verifyInclusionProof","nameLocation":"1050:20:97","parameters":{"id":59493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59485,"mutability":"mutable","name":"_key","nameLocation":"1093:4:97","nodeType":"VariableDeclaration","scope":59514,"src":"1080:17:97","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":59484,"name":"bytes","nodeType":"ElementaryTypeName","src":"1080:5:97","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":59487,"mutability":"mutable","name":"_value","nameLocation":"1120:6:97","nodeType":"VariableDeclaration","scope":59514,"src":"1107:19:97","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":59486,"name":"bytes","nodeType":"ElementaryTypeName","src":"1107:5:97","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":59490,"mutability":"mutable","name":"_proof","nameLocation":"1151:6:97","nodeType":"VariableDeclaration","scope":59514,"src":"1136:21:97","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":59488,"name":"bytes","nodeType":"ElementaryTypeName","src":"1136:5:97","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":59489,"nodeType":"ArrayTypeName","src":"1136:7:97","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":59492,"mutability":"mutable","name":"_root","nameLocation":"1175:5:97","nodeType":"VariableDeclaration","scope":59514,"src":"1167:13:97","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":59491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1167:7:97","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1070:116:97"},"returnParameters":{"id":59496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59495,"mutability":"mutable","name":"valid_","nameLocation":"1239:6:97","nodeType":"VariableDeclaration","scope":59514,"src":"1234:11:97","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":59494,"name":"bool","nodeType":"ElementaryTypeName","src":"1234:4:97","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1233:13:97"},"scope":59562,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":59543,"nodeType":"FunctionDefinition","src":"1680:222:97","nodes":[],"body":{"id":59542,"nodeType":"Block","src":"1794:108:97","nodes":[],"statements":[{"assignments":[59528],"declarations":[{"constant":false,"id":59528,"mutability":"mutable","name":"key","nameLocation":"1817:3:97","nodeType":"VariableDeclaration","scope":59542,"src":"1804:16:97","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":59527,"name":"bytes","nodeType":"ElementaryTypeName","src":"1804:5:97","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":59532,"initialValue":{"arguments":[{"id":59530,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59517,"src":"1837:4:97","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":59529,"name":"_getSecureKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59561,"src":"1823:13:97","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":59531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:19:97","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1804:38:97"},{"expression":{"id":59540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":59533,"name":"value_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59525,"src":"1852:6:97","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":59536,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59528,"src":"1876:3:97","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":59537,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59520,"src":"1881:6:97","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"id":59538,"name":"_root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59522,"src":"1889:5:97","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":59534,"name":"MerkleTrie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59477,"src":"1861:10:97","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleTrie_$59477_$","typeString":"type(library MerkleTrie)"}},"id":59535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1872:3:97","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":59330,"src":"1861:14:97","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory[] memory,bytes32) pure returns (bytes memory)"}},"id":59539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1861:34:97","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1852:43:97","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":59541,"nodeType":"ExpressionStatement","src":"1852:43:97"}]},"documentation":{"id":59515,"nodeType":"StructuredDocumentation","src":"1390:285:97","text":"@notice Retrieves the value associated with a given key.\n @param _key   Key to search for, as hex bytes.\n @param _proof Merkle trie inclusion proof for the key.\n @param _root  Known root of the Merkle trie.\n @return value_ Value of the key if it exists."},"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"1689:3:97","parameters":{"id":59523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59517,"mutability":"mutable","name":"_key","nameLocation":"1706:4:97","nodeType":"VariableDeclaration","scope":59543,"src":"1693:17:97","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":59516,"name":"bytes","nodeType":"ElementaryTypeName","src":"1693:5:97","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":59520,"mutability":"mutable","name":"_proof","nameLocation":"1727:6:97","nodeType":"VariableDeclaration","scope":59543,"src":"1712:21:97","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":59518,"name":"bytes","nodeType":"ElementaryTypeName","src":"1712:5:97","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":59519,"nodeType":"ArrayTypeName","src":"1712:7:97","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":59522,"mutability":"mutable","name":"_root","nameLocation":"1743:5:97","nodeType":"VariableDeclaration","scope":59543,"src":"1735:13:97","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":59521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1735:7:97","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1692:57:97"},"returnParameters":{"id":59526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59525,"mutability":"mutable","name":"value_","nameLocation":"1786:6:97","nodeType":"VariableDeclaration","scope":59543,"src":"1773:19:97","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":59524,"name":"bytes","nodeType":"ElementaryTypeName","src":"1773:5:97","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1772:21:97"},"scope":59562,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":59561,"nodeType":"FunctionDefinition","src":"2052:142:97","nodes":[],"body":{"id":59560,"nodeType":"Block","src":"2136:58:97","nodes":[],"statements":[{"expression":{"id":59558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":59551,"name":"hash_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59549,"src":"2146:5:97","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":59555,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59546,"src":"2181:4:97","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":59554,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2171:9:97","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":59556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:15:97","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":59552,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2154:3:97","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":59553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2158:12:97","memberName":"encodePacked","nodeType":"MemberAccess","src":"2154:16:97","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":59557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:33:97","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"2146:41:97","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":59559,"nodeType":"ExpressionStatement","src":"2146:41:97"}]},"documentation":{"id":59544,"nodeType":"StructuredDocumentation","src":"1908:139:97","text":"@notice Computes the hashed version of the input key.\n @param _key Key to hash.\n @return hash_ Hashed version of the key."},"implemented":true,"kind":"function","modifiers":[],"name":"_getSecureKey","nameLocation":"2061:13:97","parameters":{"id":59547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59546,"mutability":"mutable","name":"_key","nameLocation":"2088:4:97","nodeType":"VariableDeclaration","scope":59561,"src":"2075:17:97","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":59545,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:97","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2074:19:97"},"returnParameters":{"id":59550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59549,"mutability":"mutable","name":"hash_","nameLocation":"2129:5:97","nodeType":"VariableDeclaration","scope":59561,"src":"2116:18:97","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":59548,"name":"bytes","nodeType":"ElementaryTypeName","src":"2116:5:97","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2115:20:97"},"scope":59562,"stateMutability":"pure","virtual":false,"visibility":"private"}],"abstract":false,"baseContracts":[],"canonicalName":"SecureMerkleTrie","contractDependencies":[],"contractKind":"library","documentation":{"id":59482,"nodeType":"StructuredDocumentation","src":"105:206:97","text":"@title SecureMerkleTrie\n @notice SecureMerkleTrie is a thin wrapper around the MerkleTrie library that hashes the input\n         keys. Ethereum's state trie hashes input keys before storing them."},"fullyImplemented":true,"linearizedBaseContracts":[59562],"name":"SecureMerkleTrie","nameLocation":"319:16:97","scope":59563,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":97}
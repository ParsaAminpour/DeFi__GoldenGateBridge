{"abi":[{"type":"function","name":"getSchema","inputs":[{"name":"uid","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"tuple","internalType":"struct SchemaRecord","components":[{"name":"uid","type":"bytes32","internalType":"bytes32"},{"name":"resolver","type":"address","internalType":"contract ISchemaResolver"},{"name":"revocable","type":"bool","internalType":"bool"},{"name":"schema","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"register","inputs":[{"name":"schema","type":"string","internalType":"string"},{"name":"resolver","type":"address","internalType":"contract ISchemaResolver"},{"name":"revocable","type":"bool","internalType":"bool"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"event","name":"Registered","inputs":[{"name":"uid","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"registerer","type":"address","indexed":true,"internalType":"address"},{"name":"schema","type":"tuple","indexed":false,"internalType":"struct SchemaRecord","components":[{"name":"uid","type":"bytes32","internalType":"bytes32"},{"name":"resolver","type":"address","internalType":"contract ISchemaResolver"},{"name":"revocable","type":"bool","internalType":"bool"},{"name":"schema","type":"string","internalType":"string"}]}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getSchema(bytes32)":"a2ea7c6e","register(string,address,bool)":"60d7a278"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registerer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct SchemaRecord\",\"name\":\"schema\",\"type\":\"tuple\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getSchema\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"internalType\":\"struct SchemaRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Registered(bytes32,address,(bytes32,address,bool,string))\":{\"details\":\"Emitted when a new schema has been registered\",\"params\":{\"registerer\":\"The address of the account used to register the schema.\",\"schema\":\"The schema data.\",\"uid\":\"The schema UID.\"}}},\"kind\":\"dev\",\"methods\":{\"getSchema(bytes32)\":{\"details\":\"Returns an existing schema by UID\",\"params\":{\"uid\":\"The UID of the schema to retrieve.\"},\"returns\":{\"_0\":\"The schema data members.\"}},\"register(string,address,bool)\":{\"details\":\"Submits and reserves a new schema\",\"params\":{\"resolver\":\"An optional schema resolver.\",\"revocable\":\"Whether the schema allows revocations explicitly.\",\"schema\":\"The schema data schema.\"},\"returns\":{\"_0\":\"The UID of the new schema.\"}}},\"title\":\"ISchemaRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"The interface of global attestation schemas for the Ethereum Attestation Service protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/EAS/ISchemaRegistry.sol\":\"ISchemaRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/lib-keccak/lib/solady/src/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/EAS/Common.sol\":{\"keccak256\":\"0xf9ddc182aaf50d620d3cbca8037ee32ae5062bfc495524f91b677668176f9309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8a29db6fb14f26b81e3ccc33f96ee25395383da00933af8799342260e76efe\",\"dweb:/ipfs/QmQc3WmVZhpoRcNsFMD5Jcw2vR4HidX4NQhMCtAvmNLMJd\"]},\"src/EAS/ISchemaRegistry.sol\":{\"keccak256\":\"0x68385349bbe43887f9c2541b6fddebaab309e5401e31ac46081460a812a2127b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://767a618229f8e5fc4dd4f268a2e5f545e249039032ca17772dda206032c55125\",\"dweb:/ipfs/QmWQTxkUHJtZxYHa3MBCLGcm8f5Kxc2saDYPifKEdCiquq\"]},\"src/EAS/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xf4712a6685599bd284b0c3808e7f6e08ab5e28919647404f26ca372917ddd000\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17b31b0109cd3c1a1550738b24aa77541cc48b2ade5189bcec7808c9c9ce2c61\",\"dweb:/ipfs/QmeyKMMWsgQBeJkpr1Uugxw9bpg6oCjptyLmbR2TUqRLHB\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"uid","type":"bytes32","indexed":true},{"internalType":"address","name":"registerer","type":"address","indexed":true},{"internalType":"struct SchemaRecord","name":"schema","type":"tuple","components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"contract ISchemaResolver","name":"resolver","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"string","name":"schema","type":"string"}],"indexed":false}],"type":"event","name":"Registered","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"uid","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getSchema","outputs":[{"internalType":"struct SchemaRecord","name":"","type":"tuple","components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"contract ISchemaResolver","name":"resolver","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"string","name":"schema","type":"string"}]}]},{"inputs":[{"internalType":"string","name":"schema","type":"string"},{"internalType":"contract ISchemaResolver","name":"resolver","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"register","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]}],"devdoc":{"kind":"dev","methods":{"getSchema(bytes32)":{"details":"Returns an existing schema by UID","params":{"uid":"The UID of the schema to retrieve."},"returns":{"_0":"The schema data members."}},"register(string,address,bool)":{"details":"Submits and reserves a new schema","params":{"resolver":"An optional schema resolver.","revocable":"Whether the schema allows revocations explicitly.","schema":"The schema data schema."},"returns":{"_0":"The UID of the new schema."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@cwia/=lib/clones-with-immutable-args/src/","@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/lib-keccak/lib/solady/src/","clones-with-immutable-args/=lib/clones-with-immutable-args/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/EAS/ISchemaRegistry.sol":"ISchemaRegistry"},"evmVersion":"paris","libraries":{}},"sources":{"src/EAS/Common.sol":{"keccak256":"0xf9ddc182aaf50d620d3cbca8037ee32ae5062bfc495524f91b677668176f9309","urls":["bzz-raw://ef8a29db6fb14f26b81e3ccc33f96ee25395383da00933af8799342260e76efe","dweb:/ipfs/QmQc3WmVZhpoRcNsFMD5Jcw2vR4HidX4NQhMCtAvmNLMJd"],"license":"MIT"},"src/EAS/ISchemaRegistry.sol":{"keccak256":"0x68385349bbe43887f9c2541b6fddebaab309e5401e31ac46081460a812a2127b","urls":["bzz-raw://767a618229f8e5fc4dd4f268a2e5f545e249039032ca17772dda206032c55125","dweb:/ipfs/QmWQTxkUHJtZxYHa3MBCLGcm8f5Kxc2saDYPifKEdCiquq"],"license":"MIT"},"src/EAS/resolver/ISchemaResolver.sol":{"keccak256":"0xf4712a6685599bd284b0c3808e7f6e08ab5e28919647404f26ca372917ddd000","urls":["bzz-raw://17b31b0109cd3c1a1550738b24aa77541cc48b2ade5189bcec7808c9c9ce2c61","dweb:/ipfs/QmeyKMMWsgQBeJkpr1Uugxw9bpg6oCjptyLmbR2TUqRLHB"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"userdoc":{"version":1,"kind":"user","notice":"The interface of global attestation schemas for the Ethereum Attestation Service protocol."},"devdoc":{"version":1,"kind":"dev","methods":{"getSchema(bytes32)":{"details":"Returns an existing schema by UID","params":{"uid":"The UID of the schema to retrieve."},"returns":{"_0":"The schema data members."}},"register(string,address,bool)":{"details":"Submits and reserves a new schema","params":{"resolver":"An optional schema resolver.","revocable":"Whether the schema allows revocations explicitly.","schema":"The schema data schema."},"returns":{"_0":"The UID of the new schema."}}},"events":{"Registered(bytes32,address,(bytes32,address,bool,string))":{"details":"Emitted when a new schema has been registered","params":{"registerer":"The address of the account used to register the schema.","schema":"The schema data.","uid":"The schema UID."}}},"title":"ISchemaRegistry"},"ast":{"absolutePath":"src/EAS/ISchemaRegistry.sol","id":3622,"exportedSymbols":{"ISchemaRegistry":[3621],"ISchemaResolver":[4157],"SchemaRecord":[3587]},"nodeType":"SourceUnit","src":"32:1523:9","nodes":[{"id":3575,"nodeType":"PragmaDirective","src":"32:23:9","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":3577,"nodeType":"ImportDirective","src":"57:71:9","nodes":[],"absolutePath":"src/EAS/resolver/ISchemaResolver.sol","file":"src/EAS/resolver/ISchemaResolver.sol","nameLocation":"-1:-1:-1","scope":3622,"sourceUnit":4158,"symbolAliases":[{"foreign":{"id":3576,"name":"ISchemaResolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"66:15:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":3587,"nodeType":"StructDefinition","src":"196:285:9","nodes":[],"canonicalName":"SchemaRecord","members":[{"constant":false,"id":3579,"mutability":"mutable","name":"uid","nameLocation":"230:3:9","nodeType":"VariableDeclaration","scope":3587,"src":"222:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3578,"name":"bytes32","nodeType":"ElementaryTypeName","src":"222:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3582,"mutability":"mutable","name":"resolver","nameLocation":"295:8:9","nodeType":"VariableDeclaration","scope":3587,"src":"279:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISchemaResolver_$4157","typeString":"contract ISchemaResolver"},"typeName":{"id":3581,"nodeType":"UserDefinedTypeName","pathNode":{"id":3580,"name":"ISchemaResolver","nameLocations":["279:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":4157,"src":"279:15:9"},"referencedDeclaration":4157,"src":"279:15:9","typeDescriptions":{"typeIdentifier":"t_contract$_ISchemaResolver_$4157","typeString":"contract ISchemaResolver"}},"visibility":"internal"},{"constant":false,"id":3584,"mutability":"mutable","name":"revocable","nameLocation":"343:9:9","nodeType":"VariableDeclaration","scope":3587,"src":"338:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3583,"name":"bool","nodeType":"ElementaryTypeName","src":"338:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3586,"mutability":"mutable","name":"schema","nameLocation":"418:6:9","nodeType":"VariableDeclaration","scope":3587,"src":"411:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3585,"name":"string","nodeType":"ElementaryTypeName","src":"411:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"SchemaRecord","nameLocation":"203:12:9","scope":3622,"visibility":"public"},{"id":3621,"nodeType":"ContractDefinition","src":"613:941:9","nodes":[{"id":3598,"nodeType":"EventDefinition","src":"860:87:9","nodes":[],"anonymous":false,"documentation":{"id":3589,"nodeType":"StructuredDocumentation","src":"645:210:9","text":"@dev Emitted when a new schema has been registered\n @param uid The schema UID.\n @param registerer The address of the account used to register the schema.\n @param schema The schema data."},"eventSelector":"d0b86852e21f9e5fa4bc3b0cff9757ffe243d50c4b43968a42202153d651ea5e","name":"Registered","nameLocation":"866:10:9","parameters":{"id":3597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3591,"indexed":true,"mutability":"mutable","name":"uid","nameLocation":"893:3:9","nodeType":"VariableDeclaration","scope":3598,"src":"877:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3593,"indexed":true,"mutability":"mutable","name":"registerer","nameLocation":"914:10:9","nodeType":"VariableDeclaration","scope":3598,"src":"898:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3592,"name":"address","nodeType":"ElementaryTypeName","src":"898:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3596,"indexed":false,"mutability":"mutable","name":"schema","nameLocation":"939:6:9","nodeType":"VariableDeclaration","scope":3598,"src":"926:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SchemaRecord_$3587_memory_ptr","typeString":"struct SchemaRecord"},"typeName":{"id":3595,"nodeType":"UserDefinedTypeName","pathNode":{"id":3594,"name":"SchemaRecord","nameLocations":["926:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":3587,"src":"926:12:9"},"referencedDeclaration":3587,"src":"926:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_SchemaRecord_$3587_storage_ptr","typeString":"struct SchemaRecord"}},"visibility":"internal"}],"src":"876:70:9"}},{"id":3611,"nodeType":"FunctionDefinition","src":"1217:111:9","nodes":[],"documentation":{"id":3599,"nodeType":"StructuredDocumentation","src":"953:259:9","text":"@dev Submits and reserves a new schema\n @param schema The schema data schema.\n @param resolver An optional schema resolver.\n @param revocable Whether the schema allows revocations explicitly.\n @return The UID of the new schema."},"functionSelector":"60d7a278","implemented":false,"kind":"function","modifiers":[],"name":"register","nameLocation":"1226:8:9","parameters":{"id":3607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3601,"mutability":"mutable","name":"schema","nameLocation":"1251:6:9","nodeType":"VariableDeclaration","scope":3611,"src":"1235:22:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3600,"name":"string","nodeType":"ElementaryTypeName","src":"1235:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3604,"mutability":"mutable","name":"resolver","nameLocation":"1275:8:9","nodeType":"VariableDeclaration","scope":3611,"src":"1259:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISchemaResolver_$4157","typeString":"contract ISchemaResolver"},"typeName":{"id":3603,"nodeType":"UserDefinedTypeName","pathNode":{"id":3602,"name":"ISchemaResolver","nameLocations":["1259:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":4157,"src":"1259:15:9"},"referencedDeclaration":4157,"src":"1259:15:9","typeDescriptions":{"typeIdentifier":"t_contract$_ISchemaResolver_$4157","typeString":"contract ISchemaResolver"}},"visibility":"internal"},{"constant":false,"id":3606,"mutability":"mutable","name":"revocable","nameLocation":"1290:9:9","nodeType":"VariableDeclaration","scope":3611,"src":"1285:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3605,"name":"bool","nodeType":"ElementaryTypeName","src":"1285:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:66:9"},"returnParameters":{"id":3610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3611,"src":"1319:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1319:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1318:9:9"},"scope":3621,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":3620,"nodeType":"FunctionDefinition","src":"1476:76:9","nodes":[],"documentation":{"id":3612,"nodeType":"StructuredDocumentation","src":"1334:137:9","text":"@dev Returns an existing schema by UID\n @param uid The UID of the schema to retrieve.\n @return The schema data members."},"functionSelector":"a2ea7c6e","implemented":false,"kind":"function","modifiers":[],"name":"getSchema","nameLocation":"1485:9:9","parameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3614,"mutability":"mutable","name":"uid","nameLocation":"1503:3:9","nodeType":"VariableDeclaration","scope":3620,"src":"1495:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1495:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1494:13:9"},"returnParameters":{"id":3619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3620,"src":"1531:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SchemaRecord_$3587_memory_ptr","typeString":"struct SchemaRecord"},"typeName":{"id":3617,"nodeType":"UserDefinedTypeName","pathNode":{"id":3616,"name":"SchemaRecord","nameLocations":["1531:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":3587,"src":"1531:12:9"},"referencedDeclaration":3587,"src":"1531:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_SchemaRecord_$3587_storage_ptr","typeString":"struct SchemaRecord"}},"visibility":"internal"}],"src":"1530:21:9"},"scope":3621,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"ISchemaRegistry","contractDependencies":[],"contractKind":"interface","documentation":{"id":3588,"nodeType":"StructuredDocumentation","src":"483:130:9","text":"@title ISchemaRegistry\n @notice The interface of global attestation schemas for the Ethereum Attestation Service protocol."},"fullyImplemented":false,"linearizedBaseContracts":[3621],"name":"ISchemaRegistry","nameLocation":"623:15:9","scope":3622,"usedErrors":[]}],"license":"MIT"},"id":9}